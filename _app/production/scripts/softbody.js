import{R as Ns,c as Is,V as G,d as Ls,M as Et,T as _t,Q as Pt,e as pe,f as tt,g as He,C as Ue,L as Fs,F as Rs,h as Os,G as Ge,B as fe,i as gt,j as Zt,k as me,l as Bt,m as Bs,n as ve,b as Kt,o as Ht,S as js,P as qs,W as Ds,p as ks,q as Vs,r as Xe,s as Ws,D as Ys,A as Hs}from"./three.module.js";const ye={type:"change"},re={type:"start"},Ze={type:"end"},jt=new Ns,we=new Is,Us=Math.cos(70*He.DEG2RAD),Y=new G,K=2*Math.PI,D={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},$t=1e-6;class Gs extends Ls{constructor(t,e=null){super(t,e),this.state=D.NONE,this.target=new G,this.cursor=new G,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Et.ROTATE,MIDDLE:Et.DOLLY,RIGHT:Et.PAN},this.touches={ONE:_t.ROTATE,TWO:_t.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new G,this._lastQuaternion=new Pt,this._lastTargetPosition=new G,this._quat=new Pt().setFromUnitVectors(t.up,new G(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new pe,this._sphericalDelta=new pe,this._scale=1,this._panOffset=new G,this._rotateStart=new tt,this._rotateEnd=new tt,this._rotateDelta=new tt,this._panStart=new tt,this._panEnd=new tt,this._panDelta=new tt,this._dollyStart=new tt,this._dollyEnd=new tt,this._dollyDelta=new tt,this._dollyDirection=new G,this._mouse=new tt,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=Zs.bind(this),this._onPointerDown=Xs.bind(this),this._onPointerUp=Ks.bind(this),this._onContextMenu=ii.bind(this),this._onMouseWheel=Js.bind(this),this._onKeyDown=ti.bind(this),this._onTouchStart=ei.bind(this),this._onTouchMove=si.bind(this),this._onMouseDown=$s.bind(this),this._onMouseMove=Qs.bind(this),this._interceptControlDown=ni.bind(this),this._interceptControlUp=oi.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(t){super.connect(t),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(ye),this.update(),this.state=D.NONE}update(t=null){const e=this.object.position;Y.copy(e).sub(this.target),Y.applyQuaternion(this._quat),this._spherical.setFromVector3(Y),this.autoRotate&&this.state===D.NONE&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let s=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(s)&&isFinite(i)&&(s<-Math.PI?s+=K:s>Math.PI&&(s-=K),i<-Math.PI?i+=K:i>Math.PI&&(i-=K),s<=i?this._spherical.theta=Math.max(s,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(s+i)/2?Math.max(s,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let n=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),n=o!=this._spherical.radius}if(Y.setFromSpherical(this._spherical),Y.applyQuaternion(this._quatInverse),e.copy(this.target).add(Y),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const r=Y.length();o=this._clampDistance(r*this._scale);const a=r-o;this.object.position.addScaledVector(this._dollyDirection,a),this.object.updateMatrixWorld(),n=!!a}else if(this.object.isOrthographicCamera){const r=new G(this._mouse.x,this._mouse.y,0);r.unproject(this.object);const a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),n=a!==this.object.zoom;const l=new G(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(r),this.object.updateMatrixWorld(),o=Y.length()}else this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(jt.origin.copy(this.object.position),jt.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(jt.direction))<Us?this.object.lookAt(this.target):(we.setFromNormalAndCoplanarPoint(this.object.up,this.target),jt.intersectPlane(we,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),n=!0)}return this._scale=1,this._performCursorZoom=!1,n||this._lastPosition.distanceToSquared(this.object.position)>$t||8*(1-this._lastQuaternion.dot(this.object.quaternion))>$t||this._lastTargetPosition.distanceToSquared(this.target)>$t?(this.dispatchEvent(ye),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(t){return t!==null?K/60*this.autoRotateSpeed*t:K/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(t*.01);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){Y.setFromMatrixColumn(e,0),Y.multiplyScalar(-t),this._panOffset.add(Y)}_panUp(t,e){this.screenSpacePanning===!0?Y.setFromMatrixColumn(e,1):(Y.setFromMatrixColumn(e,0),Y.crossVectors(this.object.up,Y)),Y.multiplyScalar(t),this._panOffset.add(Y)}_pan(t,e){const s=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Y.copy(i).sub(this.target);let n=Y.length();n*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*n/s.clientHeight,this.object.matrix),this._panUp(2*e*n/s.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/s.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/s.clientHeight,this.object.matrix)):this.enablePan=!1}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:this.enableZoom=!1}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:this.enableZoom=!1}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const s=this.domElement.getBoundingClientRect(),i=t-s.left,n=e-s.top,o=s.width,r=s.height;this._mouse.x=i/o*2-1,this._mouse.y=-(n/r)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(K*this._rotateDelta.x/e.clientHeight),this._rotateUp(K*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(K*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-K*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(K*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-K*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(this._pointers.length===1)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(s,i)}}_handleTouchStartPan(t){if(this._pointers.length===1)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(s,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyStart.set(0,n)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(this._pointers.length==1)this._rotateEnd.set(t.pageX,t.pageY);else{const s=this._getSecondPointerPosition(t),i=.5*(t.pageX+s.x),n=.5*(t.pageY+s.y);this._rotateEnd.set(i,n)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(K*this._rotateDelta.x/e.clientHeight),this._rotateUp(K*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(this._pointers.length===1)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),s=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(s,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),s=t.pageX-e.x,i=t.pageY-e.y,n=Math.sqrt(s*s+i*i);this._dollyEnd.set(0,n),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(t.pageX+e.x)*.5,r=(t.pageY+e.y)*.5;this._updateZoomParameters(o,r)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId){this._pointers.splice(e,1);return}}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new tt,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,s={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:s.deltaY*=16;break;case 2:s.deltaY*=100;break}return t.ctrlKey&&!this._controlActive&&(s.deltaY*=10),s}}function Xs(_){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(_.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(_)&&(this._addPointer(_),_.pointerType==="touch"?this._onTouchStart(_):this._onMouseDown(_)))}function Zs(_){this.enabled!==!1&&(_.pointerType==="touch"?this._onTouchMove(_):this._onMouseMove(_))}function Ks(_){switch(this._removePointer(_),this._pointers.length){case 0:this.domElement.releasePointerCapture(_.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(Ze),this.state=D.NONE;break;case 1:const t=this._pointers[0],e=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:e.x,pageY:e.y});break}}function $s(_){let t;switch(_.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case Et.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(_),this.state=D.DOLLY;break;case Et.ROTATE:if(_.ctrlKey||_.metaKey||_.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(_),this.state=D.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(_),this.state=D.ROTATE}break;case Et.PAN:if(_.ctrlKey||_.metaKey||_.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(_),this.state=D.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(_),this.state=D.PAN}break;default:this.state=D.NONE}this.state!==D.NONE&&this.dispatchEvent(re)}function Qs(_){switch(this.state){case D.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(_);break;case D.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(_);break;case D.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(_);break}}function Js(_){this.enabled===!1||this.enableZoom===!1||this.state!==D.NONE||(_.preventDefault(),this.dispatchEvent(re),this._handleMouseWheel(this._customWheelEvent(_)),this.dispatchEvent(Ze))}function ti(_){this.enabled!==!1&&this._handleKeyDown(_)}function ei(_){switch(this._trackPointer(_),this._pointers.length){case 1:switch(this.touches.ONE){case _t.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(_),this.state=D.TOUCH_ROTATE;break;case _t.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(_),this.state=D.TOUCH_PAN;break;default:this.state=D.NONE}break;case 2:switch(this.touches.TWO){case _t.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(_),this.state=D.TOUCH_DOLLY_PAN;break;case _t.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(_),this.state=D.TOUCH_DOLLY_ROTATE;break;default:this.state=D.NONE}break;default:this.state=D.NONE}this.state!==D.NONE&&this.dispatchEvent(re)}function si(_){switch(this._trackPointer(_),this.state){case D.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(_),this.update();break;case D.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(_),this.update();break;case D.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(_),this.update();break;case D.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(_),this.update();break;default:this.state=D.NONE}}function ii(_){this.enabled!==!1&&_.preventDefault()}function ni(_){_.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function oi(_){_.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}class ot{constructor(t=[0,0,0,0,0,0,0,0,0]){this.elements=void 0,this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t=new d){const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e=new d){const s=this.elements,i=t.x,n=t.y,o=t.z;return e.x=s[0]*i+s[1]*n+s[2]*o,e.y=s[3]*i+s[4]*n+s[5]*o,e.z=s[6]*i+s[7]*n+s[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e=new ot){const s=this.elements,i=t.elements,n=e.elements,o=s[0],r=s[1],a=s[2],l=s[3],h=s[4],u=s[5],c=s[6],f=s[7],p=s[8],v=i[0],y=i[1],w=i[2],m=i[3],x=i[4],b=i[5],S=i[6],g=i[7],C=i[8];return n[0]=o*v+r*m+a*S,n[1]=o*y+r*x+a*g,n[2]=o*w+r*b+a*C,n[3]=l*v+h*m+u*S,n[4]=l*y+h*x+u*g,n[5]=l*w+h*b+u*C,n[6]=c*v+f*m+p*S,n[7]=c*y+f*x+p*g,n[8]=c*w+f*b+p*C,e}scale(t,e=new ot){const s=this.elements,i=e.elements;for(let n=0;n!==3;n++)i[3*n+0]=t.x*s[3*n+0],i[3*n+1]=t.y*s[3*n+1],i[3*n+2]=t.z*s[3*n+2];return e}solve(t,e=new d){const n=[];let o,r;for(o=0;o<3*4;o++)n.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)n[o+4*r]=this.elements[o+3*r];n[3+4*0]=t.x,n[3+4*1]=t.y,n[3+4*2]=t.z;let a=3;const l=a;let h;const u=4;let c;do{if(o=l-a,n[o+4*o]===0){for(r=o+1;r<l;r++)if(n[o+4*r]!==0){h=u;do c=u-h,n[c+4*o]+=n[c+4*r];while(--h);break}}if(n[o+4*o]!==0)for(r=o+1;r<l;r++){const f=n[o+4*r]/n[o+4*o];h=u;do c=u-h,n[c+4*r]=c<=o?0:n[c+4*r]-n[c+4*o]*f;while(--h)}}while(--a);if(e.z=n[2*4+3]/n[2*4+2],e.y=(n[1*4+3]-n[1*4+2]*e.z)/n[1*4+1],e.x=(n[0*4+3]-n[0*4+2]*e.z-n[0*4+1]*e.y)/n[0*4+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw"Could not solve equation! Got x=["+e.toString()+"], b=["+t.toString()+"], A=["+this.toString()+"]";return e}e(t,e,s){if(s===void 0)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let s=0;s<9;s++)t+=this.elements[s]+e;return t}reverse(t=new ot){const i=ri;let n,o;for(n=0;n<3;n++)for(o=0;o<3;o++)i[n+6*o]=this.elements[n+3*o];i[3+6*0]=1,i[3+6*1]=0,i[3+6*2]=0,i[4+6*0]=0,i[4+6*1]=1,i[4+6*2]=0,i[5+6*0]=0,i[5+6*1]=0,i[5+6*2]=1;let r=3;const a=r;let l;const h=6;let u;do{if(n=a-r,i[n+6*n]===0){for(o=n+1;o<a;o++)if(i[n+6*o]!==0){l=h;do u=h-l,i[u+6*n]+=i[u+6*o];while(--l);break}}if(i[n+6*n]!==0)for(o=n+1;o<a;o++){const c=i[n+6*o]/i[n+6*n];l=h;do u=h-l,i[u+6*o]=u<=n?0:i[u+6*o]-i[u+6*n]*c;while(--l)}}while(--r);n=2;do{o=n-1;do{const c=i[n+6*o]/i[n+6*n];l=6;do u=6-l,i[u+6*o]=i[u+6*o]-i[u+6*n]*c;while(--l)}while(o--)}while(--n);n=2;do{const c=1/i[n+6*n];l=6;do u=6-l,i[u+6*n]=i[u+6*n]*c;while(--l)}while(n--);n=2;do{o=2;do{if(u=i[3+o+6*n],isNaN(u)||u===1/0)throw"Could not reverse! A=["+this.toString()+"]";t.e(n,o,u)}while(o--)}while(n--);return t}setRotationFromQuaternion(t){const e=t.x,s=t.y,i=t.z,n=t.w,o=e+e,r=s+s,a=i+i,l=e*o,h=e*r,u=e*a,c=s*r,f=s*a,p=i*a,v=n*o,y=n*r,w=n*a,m=this.elements;return m[3*0+0]=1-(c+p),m[3*0+1]=h-w,m[3*0+2]=u+y,m[3*1+0]=h+w,m[3*1+1]=1-(l+p),m[3*1+2]=f-v,m[3*2+0]=u-y,m[3*2+1]=f+v,m[3*2+2]=1-(l+c),this}transpose(t=new ot){const e=this.elements,s=t.elements;let i;return s[0]=e[0],s[4]=e[4],s[8]=e[8],i=e[1],s[1]=e[3],s[3]=i,i=e[2],s[2]=e[6],s[6]=i,i=e[5],s[5]=e[7],s[7]=i,t}}const ri=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class d{constructor(t=0,e=0,s=0){this.x=void 0,this.y=void 0,this.z=void 0,this.x=t,this.y=e,this.z=s}cross(t,e=new d){const s=t.x,i=t.y,n=t.z,o=this.x,r=this.y,a=this.z;return e.x=r*n-a*i,e.y=a*s-o*n,e.z=o*i-r*s,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new d(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new d(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new ot([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,i=Math.sqrt(t*t+e*e+s*s);if(i>0){const n=1/i;this.x*=n,this.y*=n,this.z*=n}else this.x=0,this.y=0,this.z=0;return i}unit(t=new d){const e=this.x,s=this.y,i=this.z;let n=Math.sqrt(e*e+s*s+i*i);return n>0?(n=1/n,t.x=e*n,t.y=s*n,t.z=i*n):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,i=this.z,n=t.x,o=t.y,r=t.z;return Math.sqrt((n-e)*(n-e)+(o-s)*(o-s)+(r-i)*(r-i))}distanceSquared(t){const e=this.x,s=this.y,i=this.z,n=t.x,o=t.y,r=t.z;return(n-e)*(n-e)+(o-s)*(o-s)+(r-i)*(r-i)}scale(t,e=new d){const s=this.x,i=this.y,n=this.z;return e.x=t*s,e.y=t*i,e.z=t*n,e}vmul(t,e=new d){return e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,s=new d){return s.x=this.x+t*e.x,s.y=this.y+t*e.y,s.z=this.z+t*e.z,s}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t=new d){return t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const i=ai,n=1/s;i.set(this.x*n,this.y*n,this.z*n);const o=li;Math.abs(i.x)<.9?(o.set(1,0,0),i.cross(o,t)):(o.set(0,1,0),i.cross(o,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return this.x+","+this.y+","+this.z}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const i=this.x,n=this.y,o=this.z;s.x=i+(t.x-i)*e,s.y=n+(t.y-n)*e,s.z=o+(t.z-o)*e}almostEquals(t,e=1e-6){return!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t=1e-6){return!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(ge),ge.almostEquals(t,e)}clone(){return new d(this.x,this.y,this.z)}}d.ZERO=void 0;d.UNIT_X=void 0;d.UNIT_Y=void 0;d.UNIT_Z=void 0;d.ZERO=new d(0,0,0);d.UNIT_X=new d(1,0,0);d.UNIT_Y=new d(0,1,0);d.UNIT_Z=new d(0,0,1);const ai=new d,li=new d,ge=new d;class Q{constructor(t={}){this.lowerBound=void 0,this.upperBound=void 0,this.lowerBound=new d,this.upperBound=new d,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,i){const n=this.lowerBound,o=this.upperBound,r=s;n.copy(t[0]),r&&r.vmult(n,n),o.copy(n);for(let a=1;a<t.length;a++){let l=t[a];r&&(r.vmult(l,be),l=be),l.x>o.x&&(o.x=l.x),l.x<n.x&&(n.x=l.x),l.y>o.y&&(o.y=l.y),l.y<n.y&&(n.y=l.y),l.z>o.z&&(o.z=l.z),l.z<n.z&&(n.z=l.z)}return e&&(e.vadd(n,n),e.vadd(o,o)),i&&(n.x-=i,n.y-=i,n.z-=i,o.x+=i,o.y+=i,o.z+=i),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new Q().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,i=t.lowerBound,n=t.upperBound,o=i.x<=s.x&&s.x<=n.x||e.x<=n.x&&n.x<=s.x,r=i.y<=s.y&&s.y<=n.y||e.y<=n.y&&n.y<=s.y,a=i.z<=s.z&&s.z<=n.z||e.z<=n.z&&n.z<=s.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,i=t.lowerBound,n=t.upperBound;return e.x<=i.x&&s.x>=n.x&&e.y<=i.y&&s.y>=n.y&&e.z<=i.z&&s.z>=n.z}getCorners(t,e,s,i,n,o,r,a){const l=this.lowerBound,h=this.upperBound;t.copy(l),e.set(h.x,l.y,l.z),s.set(h.x,h.y,l.z),i.set(l.x,h.y,h.z),n.set(h.x,l.y,h.z),o.set(l.x,h.y,l.z),r.set(l.x,l.y,h.z),a.copy(h)}toLocalFrame(t,e){const s=xe,i=s[0],n=s[1],o=s[2],r=s[3],a=s[4],l=s[5],h=s[6],u=s[7];this.getCorners(i,n,o,r,a,l,h,u);for(let c=0;c!==8;c++){const f=s[c];t.pointToLocal(f,f)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=xe,i=s[0],n=s[1],o=s[2],r=s[3],a=s[4],l=s[5],h=s[6],u=s[7];this.getCorners(i,n,o,r,a,l,h,u);for(let c=0;c!==8;c++){const f=s[c];t.pointToWorld(f,f)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,i=1/e.x,n=1/e.y,o=1/e.z,r=(this.lowerBound.x-s.x)*i,a=(this.upperBound.x-s.x)*i,l=(this.lowerBound.y-s.y)*n,h=(this.upperBound.y-s.y)*n,u=(this.lowerBound.z-s.z)*o,c=(this.upperBound.z-s.z)*o,f=Math.max(Math.max(Math.min(r,a),Math.min(l,h)),Math.min(u,c)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,h)),Math.max(u,c));return!(p<0||f>p)}}const be=new d,xe=[new d,new d,new d,new d,new d,new d,new d,new d];class _e{constructor(){this.matrix=void 0,this.matrix=[]}get(t,e){let{index:s}=t,{index:i}=e;if(i>s){const n=i;i=s,s=n}return this.matrix[(s*(s+1)>>1)+i-1]}set(t,e,s){let{index:i}=t,{index:n}=e;if(n>i){const o=n;n=i,i=o}this.matrix[(i*(i+1)>>1)+n-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class Ke{constructor(){this._listeners=void 0}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;return s[t]===void 0&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const s=this._listeners;return!!(s[t]!==void 0&&s[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const s=this._listeners;if(s[t]===void 0)return this;const i=s[t].indexOf(e);return i!==-1&&s[t].splice(i,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const s=this._listeners[t.type];if(s!==void 0){t.target=this;for(let i=0,n=s.length;i<n;i++)s[i].call(this,t)}return this}}class H{constructor(t=0,e=0,s=0,i=1){this.x=void 0,this.y=void 0,this.z=void 0,this.w=void 0,this.x=t,this.y=e,this.z=s,this.w=i}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}toString(){return this.x+","+this.y+","+this.z+","+this.w}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(e*.5);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(e*.5),this}toAxisAngle(t=new d){this.normalize();const e=2*Math.acos(this.w),s=Math.sqrt(1-this.w*this.w);return s<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const s=ci,i=hi;t.tangents(s,i),this.setFromAxisAngle(s,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e=new H){const s=this.x,i=this.y,n=this.z,o=this.w,r=t.x,a=t.y,l=t.z,h=t.w;return e.x=s*h+o*r+i*l-n*a,e.y=i*h+o*a+n*r-s*l,e.z=n*h+o*l+s*a-i*r,e.w=o*h-s*r-i*a-n*l,e}inverse(t=new H){const e=this.x,s=this.y,i=this.z,n=this.w;this.conjugate(t);const o=1/(e*e+s*s+i*i+n*n);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t=new H){return t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e=new d){const s=t.x,i=t.y,n=t.z,o=this.x,r=this.y,a=this.z,l=this.w,h=l*s+r*n-a*i,u=l*i+a*s-o*n,c=l*n+o*i-r*s,f=-o*s-r*i-a*n;return e.x=h*l+f*-o+u*-a-c*-r,e.y=u*l+f*-r+c*-o-h*-a,e.z=c*l+f*-a+h*-r-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e="YZX"){let s,i,n;const o=this.x,r=this.y,a=this.z,l=this.w;switch(e){case"YZX":const h=o*r+a*l;if(h>.499&&(s=2*Math.atan2(o,l),i=Math.PI/2,n=0),h<-.499&&(s=-2*Math.atan2(o,l),i=-Math.PI/2,n=0),s===void 0){const u=o*o,c=r*r,f=a*a;s=Math.atan2(2*r*l-2*o*a,1-2*c-2*f),i=Math.asin(2*h),n=Math.atan2(2*o*l-2*r*a,1-2*u-2*f)}break;default:throw new Error("Euler order "+e+" not supported yet.")}t.y=s,t.z=i,t.x=n}setFromEuler(t,e,s,i="XYZ"){const n=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(s/2),a=Math.sin(t/2),l=Math.sin(e/2),h=Math.sin(s/2);return i==="XYZ"?(this.x=a*o*r+n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r-a*l*h):i==="YXZ"?(this.x=a*o*r+n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r+a*l*h):i==="ZXY"?(this.x=a*o*r-n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r-a*l*h):i==="ZYX"?(this.x=a*o*r-n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r+a*l*h):i==="YZX"?(this.x=a*o*r+n*l*h,this.y=n*l*r+a*o*h,this.z=n*o*h-a*l*r,this.w=n*o*r-a*l*h):i==="XZY"&&(this.x=a*o*r-n*l*h,this.y=n*l*r-a*o*h,this.z=n*o*h+a*l*r,this.w=n*o*r+a*l*h),this}clone(){return new H(this.x,this.y,this.z,this.w)}slerp(t,e,s=new H){const i=this.x,n=this.y,o=this.z,r=this.w;let a=t.x,l=t.y,h=t.z,u=t.w,c,f,p,v,y;return f=i*a+n*l+o*h+r*u,f<0&&(f=-f,a=-a,l=-l,h=-h,u=-u),1-f>1e-6?(c=Math.acos(f),p=Math.sin(c),v=Math.sin((1-e)*c)/p,y=Math.sin(e*c)/p):(v=1-e,y=e),s.x=v*i+y*a,s.y=v*n+y*l,s.z=v*o+y*h,s.w=v*r+y*u,s}integrate(t,e,s,i=new H){const n=t.x*s.x,o=t.y*s.y,r=t.z*s.z,a=this.x,l=this.y,h=this.z,u=this.w,c=e*.5;return i.x+=c*(n*u+o*h-r*l),i.y+=c*(o*u+r*a-n*h),i.z+=c*(r*u+n*l-o*a),i.w+=c*(-n*a-o*l-r*h),i}}const ci=new d,hi=new d,di={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class A{constructor(t={}){this.id=void 0,this.type=void 0,this.boundingSphereRadius=void 0,this.collisionResponse=void 0,this.collisionFilterGroup=void 0,this.collisionFilterMask=void 0,this.material=void 0,this.body=void 0,this.id=A.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type}volume(){throw"volume() not implemented for shape type "+this.type}calculateLocalInertia(t,e){throw"calculateLocalInertia() not implemented for shape type "+this.type}calculateWorldAABB(t,e,s,i){throw"calculateWorldAABB() not implemented for shape type "+this.type}}A.idCounter=0;A.types=di;class q{constructor(t={}){this.position=void 0,this.quaternion=void 0,this.position=new d,this.quaternion=new H,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return q.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return q.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e=new d){return this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,s,i=new d){return s.vsub(t,i),e.conjugate(Ee),Ee.vmult(i,i),i}static pointToWorldFrame(t,e,s,i=new d){return e.vmult(s,i),i.vadd(t,i),i}static vectorToWorldFrame(t,e,s=new d){return t.vmult(e,s),s}static vectorToLocalFrame(t,e,s,i=new d){return e.w*=-1,e.vmult(s,i),e.w*=-1,i}}const Ee=new H;class St extends A{constructor(t={}){const{vertices:e=[],faces:s=[],normals:i=[],axes:n,boundingSphereRadius:o}=t;super({type:A.types.CONVEXPOLYHEDRON}),this.vertices=void 0,this.faces=void 0,this.faceNormals=void 0,this.worldVertices=void 0,this.worldVerticesNeedsUpdate=void 0,this.worldFaceNormals=void 0,this.worldFaceNormalsNeedsUpdate=void 0,this.uniqueAxes=void 0,this.uniqueEdges=void 0,this.vertices=e,this.faces=s,this.faceNormals=i,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=n?n.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,s=this.uniqueEdges;s.length=0;const i=new d;for(let n=0;n!==t.length;n++){const o=t[n],r=o.length;for(let a=0;a!==r;a++){const l=(a+1)%r;e[o[a]].vsub(e[o[l]],i),i.normalize();let h=!1;for(let u=0;u!==s.length;u++)if(s[u].almostEquals(i)||s[u].almostEquals(i)){h=!0;break}h||s.push(i.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let i=0;i<this.faces[t].length;i++)if(!this.vertices[this.faces[t][i]])throw new Error("Vertex "+this.faces[t][i]+" not found!");const e=this.faceNormals[t]||new d;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const s=this.vertices[this.faces[t][0]];if(e.dot(s)<0)for(let i=0;i<this.faces[t].length;i++);}}getFaceNormal(t,e){const s=this.faces[t],i=this.vertices[s[0]],n=this.vertices[s[1]],o=this.vertices[s[2]];St.computeNormal(i,n,o,e)}static computeNormal(t,e,s,i){const n=new d,o=new d;e.vsub(t,o),s.vsub(e,n),n.cross(o,i),i.isZero()||i.normalize()}clipAgainstHull(t,e,s,i,n,o,r,a,l){const h=new d;let u=-1,c=-Number.MAX_VALUE;for(let p=0;p<s.faces.length;p++){h.copy(s.faceNormals[p]),n.vmult(h,h);const v=h.dot(o);v>c&&(c=v,u=p)}const f=[];for(let p=0;p<s.faces[u].length;p++){const v=s.vertices[s.faces[u][p]],y=new d;y.copy(v),n.vmult(y,y),i.vadd(y,y),f.push(y)}u>=0&&this.clipFaceAgainstHull(o,t,e,f,r,a,l)}findSeparatingAxis(t,e,s,i,n,o,r,a){const l=new d,h=new d,u=new d,c=new d,f=new d,p=new d;let v=Number.MAX_VALUE;const y=this;if(y.uniqueAxes)for(let w=0;w!==y.uniqueAxes.length;w++){s.vmult(y.uniqueAxes[w],l);const m=y.testSepAxis(l,t,e,s,i,n);if(m===!1)return!1;m<v&&(v=m,o.copy(l))}else{const w=r?r.length:y.faces.length;for(let m=0;m<w;m++){const x=r?r[m]:m;l.copy(y.faceNormals[x]),s.vmult(l,l);const b=y.testSepAxis(l,t,e,s,i,n);if(b===!1)return!1;b<v&&(v=b,o.copy(l))}}if(t.uniqueAxes)for(let w=0;w!==t.uniqueAxes.length;w++){n.vmult(t.uniqueAxes[w],h);const m=y.testSepAxis(h,t,e,s,i,n);if(m===!1)return!1;m<v&&(v=m,o.copy(h))}else{const w=a?a.length:t.faces.length;for(let m=0;m<w;m++){const x=a?a[m]:m;h.copy(t.faceNormals[x]),n.vmult(h,h);const b=y.testSepAxis(h,t,e,s,i,n);if(b===!1)return!1;b<v&&(v=b,o.copy(h))}}for(let w=0;w!==y.uniqueEdges.length;w++){s.vmult(y.uniqueEdges[w],c);for(let m=0;m!==t.uniqueEdges.length;m++)if(n.vmult(t.uniqueEdges[m],f),c.cross(f,p),!p.almostZero()){p.normalize();const x=y.testSepAxis(p,t,e,s,i,n);if(x===!1)return!1;x<v&&(v=x,o.copy(p))}}return i.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,s,i,n,o){const r=this;St.project(r,t,s,i,Qt),St.project(e,t,n,o,Jt);const a=Qt[0],l=Qt[1],h=Jt[0],u=Jt[1];if(a<u||h<l)return!1;const c=a-u,f=h-l;return c<f?c:f}calculateLocalInertia(t,e){const s=new d,i=new d;this.computeLocalAABB(i,s);const n=s.x-i.x,o=s.y-i.y,r=s.z-i.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*n*2*n+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*n*2*n)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],i=this.vertices[e[0]];return-s.dot(i)}clipFaceAgainstHull(t,e,s,i,n,o,r){const a=new d,l=new d,h=new d,u=new d,c=new d,f=new d,p=new d,v=new d,y=this,w=[],m=i,x=w;let b=-1,S=Number.MAX_VALUE;for(let N=0;N<y.faces.length;N++){a.copy(y.faceNormals[N]),s.vmult(a,a);const F=a.dot(t);F<S&&(S=F,b=N)}if(b<0)return;const g=y.faces[b];g.connectedFaces=[];for(let N=0;N<y.faces.length;N++)for(let F=0;F<y.faces[N].length;F++)g.indexOf(y.faces[N][F])!==-1&&N!==b&&g.connectedFaces.indexOf(N)===-1&&g.connectedFaces.push(N);const C=g.length;for(let N=0;N<C;N++){const F=y.vertices[g[N]],B=y.vertices[g[(N+1)%C]];F.vsub(B,l),h.copy(l),s.vmult(h,h),e.vadd(h,h),u.copy(this.faceNormals[b]),s.vmult(u,u),e.vadd(u,u),h.cross(u,c),c.negate(c),f.copy(F),s.vmult(f,f),e.vadd(f,f);const E=g.connectedFaces[N];p.copy(this.faceNormals[E]);const M=this.getPlaneConstantOfFace(E);v.copy(p),s.vmult(v,v);const z=M-v.dot(e);for(this.clipFaceAgainstPlane(m,x,v,z);m.length;)m.shift();for(;x.length;)m.push(x.shift())}p.copy(this.faceNormals[b]);const I=this.getPlaneConstantOfFace(b);v.copy(p),s.vmult(v,v);const R=I-v.dot(e);for(let N=0;N<m.length;N++){let F=v.dot(m[N])+R;if(F<=n&&(F=n),F<=o){const B=m[N];if(F<=1e-6){const E={point:B,normal:v,depth:F};r.push(E)}}}}clipFaceAgainstPlane(t,e,s,i){let n,o;const r=t.length;if(r<2)return e;let a=t[t.length-1],l=t[0];n=s.dot(a)+i;for(let h=0;h<r;h++){if(l=t[h],o=s.dot(l)+i,n<0)if(o<0){const u=new d;u.copy(l),e.push(u)}else{const u=new d;a.lerp(l,n/(n-o),u),e.push(u)}else if(o<0){const u=new d;a.lerp(l,n/(n-o),u),e.push(u),e.push(l)}a=l,n=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new d);const s=this.vertices,i=this.worldVertices;for(let n=0;n!==this.vertices.length;n++)e.vmult(s[n],i[n]),t.vadd(i[n],i[n]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let i=0;i<this.vertices.length;i++){const n=s[i];n.x<t.x?t.x=n.x:n.x>e.x&&(e.x=n.x),n.y<t.y?t.y=n.y:n.y>e.y&&(e.y=n.y),n.z<t.z?t.z=n.z:n.z>e.z&&(e.z=n.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new d);const s=this.faceNormals,i=this.worldFaceNormals;for(let n=0;n!==e;n++)t.vmult(s[n],i[n]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const i=e[s].lengthSquared();i>t&&(t=i)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,i){const n=this.vertices;let o,r,a,l,h,u,c=new d;for(let f=0;f<n.length;f++){c.copy(n[f]),e.vmult(c,c),t.vadd(c,c);const p=c;(o===void 0||p.x<o)&&(o=p.x),(l===void 0||p.x>l)&&(l=p.x),(r===void 0||p.y<r)&&(r=p.y),(h===void 0||p.y>h)&&(h=p.y),(a===void 0||p.z<a)&&(a=p.z),(u===void 0||p.z>u)&&(u=p.z)}s.set(o,r,a),i.set(l,h,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t=new d){const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,i=this.vertices;if(e){for(let n=0;n<s;n++){const o=i[n];e.vmult(o,o)}for(let n=0;n<this.faceNormals.length;n++){const o=this.faceNormals[n];e.vmult(o,o)}}if(t)for(let n=0;n<s;n++){const o=i[n];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,s=this.faces,i=this.faceNormals,n=new d;this.getAveragePointLocal(n);for(let o=0;o<this.faces.length;o++){let r=i[o];const a=e[s[o][0]],l=new d;t.vsub(a,l);const h=r.dot(l),u=new d;n.vsub(a,u);const c=r.dot(u);if(h<0&&c>0||h>0&&c<0)return!1}return-1}static project(t,e,s,i,n){const o=t.vertices.length,r=ui;let a=0,l=0;const h=pi,u=t.vertices;h.setZero(),q.vectorToLocalFrame(s,i,e,r),q.pointToLocalFrame(s,i,h,h);const c=h.dot(r);l=a=u[0].dot(r);for(let f=1;f<o;f++){const p=u[f].dot(r);p>a&&(a=p),p<l&&(l=p)}if(l-=c,a-=c,l>a){const f=l;l=a,a=f}n[0]=a,n[1]=l}}const Qt=[],Jt=[],ui=new d,pi=new d;class ae extends A{constructor(t){super({type:A.types.BOX}),this.halfExtents=void 0,this.convexPolyhedronRepresentation=void 0,this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,s=this.halfExtents.z,i=d,n=[new i(-t,-e,-s),new i(t,-e,-s),new i(t,e,-s),new i(-t,e,-s),new i(-t,-e,s),new i(t,-e,s),new i(t,e,s),new i(-t,e,s)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new i(0,0,1),new i(0,1,0),new i(1,0,0)],a=new St({vertices:n,faces:o,axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e=new d){return ae.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const i=t;s.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),s.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),s.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)}getSideNormals(t,e){const s=t,i=this.halfExtents;if(s[0].set(i.x,0,0),s[1].set(0,i.y,0),s[2].set(0,0,i.z),s[3].set(-i.x,0,0),s[4].set(0,-i.y,0),s[5].set(0,0,-i.z),e!==void 0)for(let n=0;n!==s.length;n++)e.vmult(s[n],s[n]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const i=this.halfExtents,n=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]];for(let o=0;o<n.length;o++)dt.set(n[o][0],n[o][1],n[o][2]),e.vmult(dt,dt),t.vadd(dt,dt),s(dt.x,dt.y,dt.z)}calculateWorldAABB(t,e,s,i){const n=this.halfExtents;st[0].set(n.x,n.y,n.z),st[1].set(-n.x,n.y,n.z),st[2].set(-n.x,-n.y,n.z),st[3].set(-n.x,-n.y,-n.z),st[4].set(n.x,-n.y,-n.z),st[5].set(n.x,n.y,-n.z),st[6].set(-n.x,n.y,-n.z),st[7].set(n.x,-n.y,n.z);const o=st[0];e.vmult(o,o),t.vadd(o,o),i.copy(o),s.copy(o);for(let r=1;r<8;r++){const a=st[r];e.vmult(a,a),t.vadd(a,a);const l=a.x,h=a.y,u=a.z;l>i.x&&(i.x=l),h>i.y&&(i.y=h),u>i.z&&(i.z=u),l<s.x&&(s.x=l),h<s.y&&(s.y=h),u<s.z&&(s.z=u)}}}const dt=new d,st=[new d,new d,new d,new d,new d,new d,new d,new d],le={DYNAMIC:1,STATIC:2,KINEMATIC:4},ce={AWAKE:0,SLEEPY:1,SLEEPING:2};class T extends Ke{constructor(t={}){super(),this.id=void 0,this.index=void 0,this.world=void 0,this.preStep=void 0,this.postStep=void 0,this.vlambda=void 0,this.collisionFilterGroup=void 0,this.collisionFilterMask=void 0,this.collisionResponse=void 0,this.position=void 0,this.previousPosition=void 0,this.interpolatedPosition=void 0,this.initPosition=void 0,this.velocity=void 0,this.initVelocity=void 0,this.force=void 0,this.mass=void 0,this.invMass=void 0,this.material=void 0,this.linearDamping=void 0,this.type=void 0,this.allowSleep=void 0,this.sleepState=void 0,this.sleepSpeedLimit=void 0,this.sleepTimeLimit=void 0,this.timeLastSleepy=void 0,this.wakeUpAfterNarrowphase=void 0,this.torque=void 0,this.quaternion=void 0,this.initQuaternion=void 0,this.previousQuaternion=void 0,this.interpolatedQuaternion=void 0,this.angularVelocity=void 0,this.initAngularVelocity=void 0,this.shapes=void 0,this.shapeOffsets=void 0,this.shapeOrientations=void 0,this.inertia=void 0,this.invInertia=void 0,this.invInertiaWorld=void 0,this.invMassSolve=void 0,this.invInertiaSolve=void 0,this.invInertiaWorldSolve=void 0,this.fixedRotation=void 0,this.angularDamping=void 0,this.linearFactor=void 0,this.angularFactor=void 0,this.aabb=void 0,this.aabbNeedsUpdate=void 0,this.boundingRadius=void 0,this.wlambda=void 0,this.isTrigger=void 0,this.id=T.idCounter++,this.index=-1,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new d,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new d,this.previousPosition=new d,this.interpolatedPosition=new d,this.initPosition=new d,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new d,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new d,this.force=new d;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?T.STATIC:T.DYNAMIC,typeof t.type==typeof T.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=T.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new d,this.quaternion=new H,this.initQuaternion=new H,this.previousQuaternion=new H,this.interpolatedQuaternion=new H,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new d,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new d,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new d,this.invInertia=new d,this.invInertiaWorld=new ot,this.invMassSolve=0,this.invInertiaSolve=new d,this.invInertiaWorldSolve=new ot,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new d(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new d(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new Q,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new d,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=T.AWAKE,this.wakeUpAfterNarrowphase=!1,t===T.SLEEPING&&this.dispatchEvent(T.wakeupEvent)}sleep(){this.sleepState=T.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),i=this.sleepSpeedLimit**2;e===T.AWAKE&&s<i?(this.sleepState=T.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(T.sleepyEvent)):e===T.SLEEPY&&s>i?this.wakeUp():e===T.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(T.sleepEvent))}}updateSolveMassProperties(){this.sleepState===T.SLEEPING||this.type===T.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e=new d){return t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e=new d){return this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e=new d){return this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e=new d){return this.quaternion.vmult(t,e),e}addShape(t,e,s){const i=new d,n=new H;return e&&i.copy(e),s&&n.copy(s),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?this:(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let i=0;for(let n=0;n!==s;n++){const o=t[n];o.updateBoundingSphereRadius();const r=e[n].length(),a=o.boundingSphereRadius;r+a>i&&(i=r+a)}this.boundingRadius=i}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,i=t.length,n=fi,o=mi,r=this.quaternion,a=this.aabb,l=vi;for(let h=0;h!==i;h++){const u=t[h];r.vmult(e[h],n),n.vadd(this.position,n),r.mult(s[h],o),u.calculateWorldAABB(n,o,l.lowerBound,l.upperBound),h===0?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const s=yi,i=wi;s.setRotationFromQuaternion(this.quaternion),s.transpose(i),s.scale(e,s),s.mmult(i,this.invInertiaWorld)}}applyForce(t,e=new d){if(this.type!==T.DYNAMIC)return;this.sleepState===T.SLEEPING&&this.wakeUp();const s=gi;e.cross(t,s),this.force.vadd(t,this.force),this.torque.vadd(s,this.torque)}applyLocalForce(t,e=new d){if(this.type!==T.DYNAMIC)return;const s=bi,i=xi;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,i),this.applyForce(s,i)}applyTorque(t){this.type===T.DYNAMIC&&(this.sleepState===T.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e=new d){if(this.type!==T.DYNAMIC)return;this.sleepState===T.SLEEPING&&this.wakeUp();const s=e,i=_i;i.copy(t),i.scale(this.invMass,i),this.velocity.vadd(i,this.velocity);const n=Ei;s.cross(t,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(t,e=new d){if(this.type!==T.DYNAMIC)return;const s=Si,i=Pi;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,i),this.applyImpulse(s,i)}updateMassProperties(){const t=Ci;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),ae.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const s=new d;return t.vsub(this.position,s),this.angularVelocity.cross(s,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===T.DYNAMIC||this.type===T.KINEMATIC)||this.sleepState===T.SLEEPING)return;const i=this.velocity,n=this.angularVelocity,o=this.position,r=this.force,a=this.torque,l=this.quaternion,h=this.invMass,u=this.invInertiaWorld,c=this.linearFactor,f=h*t;i.x+=r.x*f*c.x,i.y+=r.y*f*c.y,i.z+=r.z*f*c.z;const p=u.elements,v=this.angularFactor,y=a.x*v.x,w=a.y*v.y,m=a.z*v.z;n.x+=t*(p[0]*y+p[1]*w+p[2]*m),n.y+=t*(p[3]*y+p[4]*w+p[5]*m),n.z+=t*(p[6]*y+p[7]*w+p[8]*m),o.x+=i.x*t,o.y+=i.y*t,o.z+=i.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(s?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}T.idCounter=0;T.COLLIDE_EVENT_NAME="collide";T.DYNAMIC=le.DYNAMIC;T.STATIC=le.STATIC;T.KINEMATIC=le.KINEMATIC;T.AWAKE=ce.AWAKE;T.SLEEPY=ce.SLEEPY;T.SLEEPING=ce.SLEEPING;T.wakeupEvent={type:"wakeup"};T.sleepyEvent={type:"sleepy"};T.sleepEvent={type:"sleep"};const fi=new d,mi=new H,vi=new Q,yi=new ot,wi=new ot,gi=new d,bi=new d,xi=new d,_i=new d,Ei=new d,Si=new d,Pi=new d,Ci=new d;class zi{constructor(){this.world=void 0,this.useBoundingBoxes=void 0,this.dirty=void 0,this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!(!(t.collisionFilterGroup&e.collisionFilterMask)||!(e.collisionFilterGroup&t.collisionFilterMask)||(t.type&T.STATIC||t.sleepState===T.SLEEPING)&&(e.type&T.STATIC||e.sleepState===T.SLEEPING))}intersectionTest(t,e,s,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,i):this.doBoundingSphereBroadphase(t,e,s,i)}doBoundingSphereBroadphase(t,e,s,i){const n=Mi;e.position.vsub(t.position,n);const o=(t.boundingRadius+e.boundingRadius)**2;n.lengthSquared()<o&&(s.push(t),i.push(e))}doBoundingBoxBroadphase(t,e,s,i){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),i.push(e))}makePairsUnique(t,e){const s=Ti,i=Ai,n=Ni,o=t.length;for(let r=0;r!==o;r++)i[r]=t[r],n[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const a=i[r].id,l=n[r].id,h=a<l?a+","+l:l+","+a;s[h]=r,s.keys.push(h)}for(let r=0;r!==s.keys.length;r++){const a=s.keys.pop(),l=s[a];t.push(i[l]),e.push(n[l]),delete s[a]}}setWorld(t){}static boundingSphereCheck(t,e){const s=new d;t.position.vsub(e.position,s);const i=t.shapes[0],n=e.shapes[0];return Math.pow(i.boundingSphereRadius+n.boundingSphereRadius,2)>s.lengthSquared()}aabbQuery(t,e,s){return[]}}const Mi=new d,Ti={keys:[]},Ai=[],Ni=[];class $e extends zi{constructor(){super()}collisionPairs(t,e,s){const i=t.bodies,n=i.length;let o,r;for(let a=0;a!==n;a++)for(let l=0;l!==a;l++)o=i[a],r=i[l],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,s)}aabbQuery(t,e,s=[]){for(let i=0;i<t.bodies.length;i++){const n=t.bodies[i];n.aabbNeedsUpdate&&n.updateAABB(),n.aabb.overlaps(e)&&s.push(n)}return s}}class oe{constructor(){this.rayFromWorld=void 0,this.rayToWorld=void 0,this.hitNormalWorld=void 0,this.hitPointWorld=void 0,this.hasHit=void 0,this.shape=void 0,this.body=void 0,this.hitFaceIndex=void 0,this.distance=void 0,this.shouldStop=void 0,this.rayFromWorld=new d,this.rayToWorld=new d,this.hitNormalWorld=new d,this.hitPointWorld=new d,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,i,n,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(i),this.shape=n,this.body=o,this.distance=r}}let Qe,Je,ts,es,ss,is,ns;const he={CLOSEST:1,ANY:2,ALL:4};Qe=A.types.SPHERE;Je=A.types.PLANE;ts=A.types.BOX;es=A.types.CYLINDER;ss=A.types.CONVEXPOLYHEDRON;is=A.types.HEIGHTFIELD;ns=A.types.TRIMESH;class W{get[Qe](){return this._intersectSphere}get[Je](){return this._intersectPlane}get[ts](){return this._intersectBox}get[es](){return this._intersectConvex}get[ss](){return this._intersectConvex}get[is](){return this._intersectHeightfield}get[ns](){return this._intersectTrimesh}constructor(t=new d,e=new d){this.from=void 0,this.to=void 0,this.direction=void 0,this.precision=void 0,this.checkCollisionResponse=void 0,this.skipBackfaces=void 0,this.collisionFilterMask=void 0,this.collisionFilterGroup=void 0,this.mode=void 0,this.result=void 0,this.hasHit=void 0,this.callback=void 0,this.from=t.clone(),this.to=e.clone(),this.direction=new d,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=W.ANY,this.result=new oe,this.hasHit=!1,this.callback=s=>{}}intersectWorld(t,e){return this.mode=e.mode||W.ANY,this.result=e.result||new oe,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Se),te.length=0,t.broadphase.aabbQuery(t,Se,te),this.intersectBodies(te),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse||!(this.collisionFilterGroup&t.collisionFilterMask)||!(t.collisionFilterGroup&this.collisionFilterMask))return;const i=Ii,n=Li;for(let o=0,r=t.shapes.length;o<r;o++){const a=t.shapes[o];if(!(s&&!a.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],n),t.quaternion.vmult(t.shapeOffsets[o],i),i.vadd(t.position,i),this.intersectShape(a,n,i,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let s=0,i=t.length;!this.result.shouldStop&&s<i;s++)this.intersectBody(t[s])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,i){const n=this.from;if(Gi(n,this.direction,s)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,s,i,t)}_intersectBox(t,e,s,i,n){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,i,n)}_intersectPlane(t,e,s,i,n){const o=this.from,r=this.to,a=this.direction,l=new d(0,0,1);e.vmult(l,l);const h=new d;o.vsub(s,h);const u=h.dot(l);r.vsub(s,h);const c=h.dot(l);if(u*c>0||o.distanceTo(r)<u)return;const f=l.dot(a);if(Math.abs(f)<this.precision)return;const p=new d,v=new d,y=new d;o.vsub(s,p);const w=-l.dot(p)/f;a.scale(w,v),o.vadd(v,y),this.reportIntersection(l,y,n,i,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,i=this.to,n=this.from;e.x=Math.min(i.x,n.x),e.y=Math.min(i.y,n.y),e.z=Math.min(i.z,n.z),s.x=Math.max(i.x,n.x),s.y=Math.max(i.y,n.y),s.z=Math.max(i.z,n.z)}_intersectHeightfield(t,e,s,i,n){t.data,t.elementSize;const o=Fi;o.from.copy(this.from),o.to.copy(this.to),q.pointToLocalFrame(s,e,o.from,o.from),q.pointToLocalFrame(s,e,o.to,o.to),o.updateDirection();const r=Ri;let a,l,h,u;a=l=0,h=u=t.data.length-1;const c=new Q;o.getAABB(c),t.getIndexOfPosition(c.lowerBound.x,c.lowerBound.y,r,!0),a=Math.max(a,r[0]),l=Math.max(l,r[1]),t.getIndexOfPosition(c.upperBound.x,c.upperBound.y,r,!0),h=Math.min(h,r[0]+1),u=Math.min(u,r[1]+1);for(let f=a;f<h;f++)for(let p=l;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,c),!!c.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),q.pointToWorldFrame(s,e,t.pillarOffset,qt),this._intersectConvex(t.pillarConvex,e,qt,i,n,Pe),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),q.pointToWorldFrame(s,e,t.pillarOffset,qt),this._intersectConvex(t.pillarConvex,e,qt,i,n,Pe)}}}_intersectSphere(t,e,s,i,n){const o=this.from,r=this.to,a=t.radius,l=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,h=2*((r.x-o.x)*(o.x-s.x)+(r.y-o.y)*(o.y-s.y)+(r.z-o.z)*(o.z-s.z)),u=(o.x-s.x)**2+(o.y-s.y)**2+(o.z-s.z)**2-a**2,c=h**2-4*l*u,f=Oi,p=Bi;if(!(c<0))if(c===0)o.lerp(r,c,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,n,i,-1);else{const v=(-h-Math.sqrt(c))/(2*l),y=(-h+Math.sqrt(c))/(2*l);if(v>=0&&v<=1&&(o.lerp(r,v,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,n,i,-1)),this.result.shouldStop)return;y>=0&&y<=1&&(o.lerp(r,y,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,n,i,-1))}}_intersectConvex(t,e,s,i,n,o){const r=ji,a=Ce,l=o&&o.faceList||null,h=t.faces,u=t.vertices,c=t.faceNormals,f=this.direction,p=this.from,v=this.to,y=p.distanceTo(v),w=l?l.length:h.length,m=this.result;for(let x=0;!m.shouldStop&&x<w;x++){const b=l?l[x]:x,S=h[b],g=c[b],C=e,I=s;a.copy(u[S[0]]),C.vmult(a,a),a.vadd(I,a),a.vsub(p,a),C.vmult(g,r);const R=f.dot(r);if(Math.abs(R)<this.precision)continue;const N=r.dot(a)/R;if(!(N<0)){f.scale(N,$),$.vadd(p,$),et.copy(u[S[0]]),C.vmult(et,et),I.vadd(et,et);for(let F=1;!m.shouldStop&&F<S.length-1;F++){it.copy(u[S[F]]),nt.copy(u[S[F+1]]),C.vmult(it,it),C.vmult(nt,nt),I.vadd(it,it),I.vadd(nt,nt);const B=$.distanceTo(p);!(W.pointInTriangle($,et,it,nt)||W.pointInTriangle($,it,et,nt))||B>y||this.reportIntersection(r,$,n,i,b)}}}}_intersectTrimesh(t,e,s,i,n,o){const r=qi,a=Hi,l=Ui,h=Ce,u=Di,c=ki,f=Vi,p=Yi,v=Wi,y=t.indices;t.vertices;const w=this.from,m=this.to,x=this.direction;l.position.copy(s),l.quaternion.copy(e),q.vectorToLocalFrame(s,e,x,u),q.pointToLocalFrame(s,e,w,c),q.pointToLocalFrame(s,e,m,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,c.x*=t.scale.x,c.y*=t.scale.y,c.z*=t.scale.z,f.vsub(c,u),u.normalize();const b=c.distanceSquared(f);t.tree.rayQuery(this,l,a);for(let S=0,g=a.length;!this.result.shouldStop&&S!==g;S++){const C=a[S];t.getNormal(C,r),t.getVertex(y[C*3],et),et.vsub(c,h);const I=u.dot(r),R=r.dot(h)/I;if(R<0)continue;u.scale(R,$),$.vadd(c,$),t.getVertex(y[C*3+1],it),t.getVertex(y[C*3+2],nt);const N=$.distanceSquared(c);!(W.pointInTriangle($,it,et,nt)||W.pointInTriangle($,et,it,nt))||N>b||(q.vectorToWorldFrame(e,r,v),q.pointToWorldFrame(s,e,$,p),this.reportIntersection(v,p,n,i,C))}a.length=0}reportIntersection(t,e,s,i,n){const o=this.from,r=this.to,a=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=typeof n<"u"?n:-1,this.mode){case W.ALL:this.hasHit=!0,l.set(o,r,t,e,s,i,a),l.hasHit=!0,this.callback(l);break;case W.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,i,a));break;case W.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,i,a),l.shouldStop=!0;break}}static pointInTriangle(t,e,s,i){i.vsub(e,mt),s.vsub(e,Mt),t.vsub(e,ee);const n=mt.dot(mt),o=mt.dot(Mt),r=mt.dot(ee),a=Mt.dot(Mt),l=Mt.dot(ee);let h,u;return(h=a*r-o*l)>=0&&(u=n*l-o*r)>=0&&h+u<n*a-o*o}}W.CLOSEST=he.CLOSEST;W.ANY=he.ANY;W.ALL=he.ALL;const Se=new Q,te=[],Mt=new d,ee=new d,Ii=new d,Li=new H,$=new d,et=new d,it=new d,nt=new d,Pe={faceList:[0]},qt=new d,Fi=new W,Ri=[],Oi=new d,Bi=new d,ji=new d,Ce=new d,qi=new d,Di=new d,ki=new d,Vi=new d,Wi=new d,Yi=new d;new Q;const Hi=[],Ui=new q,mt=new d,Dt=new d;function Gi(_,t,e){e.vsub(_,mt);const s=mt.dot(t);return t.scale(s,Dt),Dt.vadd(_,Dt),e.distanceTo(Dt)}class Xi{static defaults(t={},e){for(let s in e)s in t||(t[s]=e[s]);return t}}class ze{constructor(){this.spatial=void 0,this.rotational=void 0,this.spatial=new d,this.rotational=new d}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Lt{constructor(t,e,s=-1e6,i=1e6){this.id=void 0,this.minForce=void 0,this.maxForce=void 0,this.bi=void 0,this.bj=void 0,this.si=void 0,this.sj=void 0,this.a=void 0,this.b=void 0,this.eps=void 0,this.jacobianElementA=void 0,this.jacobianElementB=void 0,this.enabled=void 0,this.multiplier=void 0,this.id=Lt.idCounter++,this.minForce=s,this.maxForce=i,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new ze,this.jacobianElementB=new ze,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const i=e,n=t,o=s;this.a=4/(o*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(o*o*n*(1+4*i))}computeB(t,e,s){const i=this.computeGW(),n=this.computeGq(),o=this.computeGiMf();return-n*t-i*e-o*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,n=s.position,o=i.position;return t.spatial.dot(n)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,n=s.velocity,o=i.velocity,r=s.angularVelocity,a=i.angularVelocity;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,n=s.vlambda,o=i.vlambda,r=s.wlambda,a=i.wlambda;return t.multiplyVectors(n,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,n=s.force,o=s.torque,r=i.force,a=i.torque,l=s.invMassSolve,h=i.invMassSolve;return n.scale(l,Me),r.scale(h,Te),s.invInertiaWorldSolve.vmult(o,Ae),i.invInertiaWorldSolve.vmult(a,Ne),t.multiplyVectors(Me,Ae)+e.multiplyVectors(Te,Ne)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,i=this.bj,n=s.invMassSolve,o=i.invMassSolve,r=s.invInertiaWorldSolve,a=i.invInertiaWorldSolve;let l=n+o;return r.vmult(t.rotational,kt),l+=kt.dot(t.rotational),a.vmult(e.rotational,kt),l+=kt.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,i=this.bi,n=this.bj,o=Zi;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),n.vlambda.addScaledVector(n.invMassSolve*t,s.spatial,n.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda),n.invInertiaWorldSolve.vmult(s.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Lt.idCounter=0;const Me=new d,Te=new d,Ae=new d,Ne=new d,kt=new d,Zi=new d;class Ki extends Lt{constructor(t,e,s=1e6){super(t,e,0,s),this.restitution=void 0,this.ri=void 0,this.rj=void 0,this.ni=void 0,this.restitution=0,this.ri=new d,this.rj=new d,this.ni=new d}computeB(t){const e=this.a,s=this.b,i=this.bi,n=this.bj,o=this.ri,r=this.rj,a=$i,l=Qi,h=i.velocity,u=i.angularVelocity;i.force,i.torque;const c=n.velocity,f=n.angularVelocity;n.force,n.torque;const p=Ji,v=this.jacobianElementA,y=this.jacobianElementB,w=this.ni;o.cross(w,a),r.cross(w,l),w.negate(v.spatial),a.negate(v.rotational),y.spatial.copy(w),y.rotational.copy(l),p.copy(n.position),p.vadd(r,p),p.vsub(i.position,p),p.vsub(o,p);const m=w.dot(p),x=this.restitution+1,b=x*c.dot(w)-x*h.dot(w)+f.dot(l)-u.dot(a),S=this.computeGiMf();return-m*e-b*s-t*S}getImpactVelocityAlongNormal(){const t=tn,e=en,s=sn,i=nn,n=on;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,n),this.ni.dot(n)}}const $i=new d,Qi=new d,Ji=new d,tn=new d,en=new d,sn=new d,nn=new d,on=new d;class Ie extends Lt{constructor(t,e,s){super(t,e,-s,s),this.ri=void 0,this.rj=void 0,this.t=void 0,this.ri=new d,this.rj=new d,this.t=new d}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,i=this.rj,n=rn,o=an,r=this.t;s.cross(r,n),i.cross(r,o);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),n.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(o);const h=this.computeGW(),u=this.computeGiMf();return-h*e-t*u}}const rn=new d,an=new d;class Ft{constructor(t,e,s){this.id=void 0,this.materials=void 0,this.friction=void 0,this.restitution=void 0,this.contactEquationStiffness=void 0,this.contactEquationRelaxation=void 0,this.frictionEquationStiffness=void 0,this.frictionEquationRelaxation=void 0,s=Xi.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Ft.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}Ft.idCounter=0;class Ct{constructor(t={}){this.name=void 0,this.id=void 0,this.friction=void 0,this.restitution=void 0;let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=Ct.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}Ct.idCounter=0;new W;class ln extends A{constructor(){super({type:A.types.PLANE}),this.worldNormal=void 0,this.worldNormalNeedsUpdate=void 0,this.boundingSphereRadius=void 0,this.worldNormal=new d,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(t){const e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(t,e=new d){return e}volume(){return Number.MAX_VALUE}calculateWorldAABB(t,e,s,i){rt.set(0,0,1),e.vmult(rt,rt);const n=Number.MAX_VALUE;s.set(-n,-n,-n),i.set(n,n,n),rt.x===1?i.x=t.x:rt.x===-1&&(s.x=t.x),rt.y===1?i.y=t.y:rt.y===-1&&(s.y=t.y),rt.z===1?i.z=t.z:rt.z===-1&&(s.z=t.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const rt=new d;new Q;new Q;new Q;new q;new Q;class cn{constructor(){this.equations=void 0,this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);s!==-1&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}class hn extends cn{constructor(){super(),this.iterations=void 0,this.tolerance=void 0,this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const i=this.iterations,n=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,l=a.length,h=t;let u,c,f,p,v,y;if(r!==0)for(let b=0;b!==l;b++)a[b].updateSolveMassProperties();const w=un,m=pn,x=dn;w.length=r,m.length=r,x.length=r;for(let b=0;b!==r;b++){const S=o[b];x[b]=0,m[b]=S.computeB(h),w[b]=1/S.computeC()}if(r!==0){for(let g=0;g!==l;g++){const C=a[g],I=C.vlambda,R=C.wlambda;I.set(0,0,0),R.set(0,0,0)}for(s=0;s!==i;s++){p=0;for(let g=0;g!==r;g++){const C=o[g];u=m[g],c=w[g],y=x[g],v=C.computeGWlambda(),f=c*(u-v-C.eps*y),y+f<C.minForce?f=C.minForce-y:y+f>C.maxForce&&(f=C.maxForce-y),x[g]+=f,p+=f>0?f:-f,C.addToWlambda(f)}if(p*p<n)break}for(let g=0;g!==l;g++){const C=a[g],I=C.velocity,R=C.angularVelocity;C.vlambda.vmul(C.linearFactor,C.vlambda),I.vadd(C.vlambda,I),C.wlambda.vmul(C.angularFactor,C.wlambda),R.vadd(C.wlambda,R)}let b=o.length;const S=1/h;for(;b--;)o[b].multiplier=x[b]*S}return s}}const dn=[],un=[],pn=[];T.STATIC;class fn{constructor(){this.objects=[],this.type=Object}release(...t){const e=t.length;for(let s=0;s!==e;s++)this.objects.push(t[s]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class mn extends fn{constructor(...t){super(...t),this.type=d}constructObject(){return new d}}let os,rs,as,ls,cs,hs,ds,us,ps,fs,ms,vs,ys,ws,gs,bs,xs,_s,Es,Ss,Ps,Cs,zs,Ms,Ts;const k={sphereSphere:A.types.SPHERE,spherePlane:A.types.SPHERE|A.types.PLANE,boxBox:A.types.BOX|A.types.BOX,sphereBox:A.types.SPHERE|A.types.BOX,planeBox:A.types.PLANE|A.types.BOX,convexConvex:A.types.CONVEXPOLYHEDRON,sphereConvex:A.types.SPHERE|A.types.CONVEXPOLYHEDRON,planeConvex:A.types.PLANE|A.types.CONVEXPOLYHEDRON,boxConvex:A.types.BOX|A.types.CONVEXPOLYHEDRON,sphereHeightfield:A.types.SPHERE|A.types.HEIGHTFIELD,boxHeightfield:A.types.BOX|A.types.HEIGHTFIELD,convexHeightfield:A.types.CONVEXPOLYHEDRON|A.types.HEIGHTFIELD,sphereParticle:A.types.PARTICLE|A.types.SPHERE,planeParticle:A.types.PLANE|A.types.PARTICLE,boxParticle:A.types.BOX|A.types.PARTICLE,convexParticle:A.types.PARTICLE|A.types.CONVEXPOLYHEDRON,cylinderCylinder:A.types.CYLINDER,sphereCylinder:A.types.SPHERE|A.types.CYLINDER,planeCylinder:A.types.PLANE|A.types.CYLINDER,boxCylinder:A.types.BOX|A.types.CYLINDER,convexCylinder:A.types.CONVEXPOLYHEDRON|A.types.CYLINDER,heightfieldCylinder:A.types.HEIGHTFIELD|A.types.CYLINDER,particleCylinder:A.types.PARTICLE|A.types.CYLINDER,sphereTrimesh:A.types.SPHERE|A.types.TRIMESH,planeTrimesh:A.types.PLANE|A.types.TRIMESH};os=k.sphereSphere;rs=k.spherePlane;as=k.boxBox;ls=k.sphereBox;cs=k.planeBox;hs=k.convexConvex;ds=k.sphereConvex;us=k.planeConvex;ps=k.boxConvex;fs=k.sphereHeightfield;ms=k.boxHeightfield;vs=k.convexHeightfield;ys=k.sphereParticle;ws=k.planeParticle;gs=k.boxParticle;bs=k.convexParticle;xs=k.cylinderCylinder;_s=k.sphereCylinder;Es=k.planeCylinder;Ss=k.boxCylinder;Ps=k.convexCylinder;Cs=k.heightfieldCylinder;zs=k.particleCylinder;Ms=k.sphereTrimesh;Ts=k.planeTrimesh;class vn{get[os](){return this.sphereSphere}get[rs](){return this.spherePlane}get[as](){return this.boxBox}get[ls](){return this.sphereBox}get[cs](){return this.planeBox}get[hs](){return this.convexConvex}get[ds](){return this.sphereConvex}get[us](){return this.planeConvex}get[ps](){return this.boxConvex}get[fs](){return this.sphereHeightfield}get[ms](){return this.boxHeightfield}get[vs](){return this.convexHeightfield}get[ys](){return this.sphereParticle}get[ws](){return this.planeParticle}get[gs](){return this.boxParticle}get[bs](){return this.convexParticle}get[xs](){return this.convexConvex}get[_s](){return this.sphereConvex}get[Es](){return this.planeConvex}get[Ss](){return this.boxConvex}get[Ps](){return this.convexConvex}get[Cs](){return this.heightfieldCylinder}get[zs](){return this.particleCylinder}get[Ms](){return this.sphereTrimesh}get[Ts](){return this.planeTrimesh}constructor(t){this.contactPointPool=void 0,this.frictionEquationPool=void 0,this.result=void 0,this.frictionResult=void 0,this.v3pool=void 0,this.world=void 0,this.currentContactMaterial=void 0,this.enableFrictionReduction=void 0,this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new mn,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,i,n,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Ki(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&i.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=s.material||t.material,h=i.material||e.material;return l&&h&&l.restitution>=0&&h.restitution>=0&&(r.restitution=l.restitution*h.restitution),r.si=n||s,r.sj=o||i,r}createFrictionEquationsFromContact(t,e){const s=t.bi,i=t.bj,n=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const h=n.material||s.material,u=o.material||i.material;if(h&&u&&h.friction>=0&&u.friction>=0&&(l=h.friction*u.friction),l>0){const c=l*r.gravity.length();let f=s.invMass+i.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,v=p.length?p.pop():new Ie(s,i,c*f),y=p.length?p.pop():new Ie(s,i,c*f);return v.bi=y.bi=s,v.bj=y.bj=i,v.minForce=y.minForce=-c*f,v.maxForce=y.maxForce=c*f,v.ri.copy(t.ri),v.rj.copy(t.rj),y.ri.copy(t.ri),y.rj.copy(t.rj),t.ni.tangents(v.t,y.t),v.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),y.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),v.enabled=y.enabled=t.enabled,e.push(v,y),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const s=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];pt.setZero(),bt.setZero(),xt.setZero();const n=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==n?(pt.vadd(e.ni,pt),bt.vadd(e.ri,bt),xt.vadd(e.rj,xt)):(pt.vsub(e.ni,pt),bt.vadd(e.rj,bt),xt.vadd(e.ri,xt));const o=1/t;bt.scale(o,s.ri),xt.scale(o,s.rj),i.ri.copy(s.ri),i.rj.copy(s.rj),pt.normalize(),pt.tangents(s.t,i.t)}getContacts(t,e,s,i,n,o,r){this.contactPointPool=n,this.frictionEquationPool=r,this.result=i,this.frictionResult=o;const a=gn,l=bn,h=yn,u=wn;for(let c=0,f=t.length;c!==f;c++){const p=t[c],v=e[c];let y=null;p.material&&v.material&&(y=s.getContactMaterial(p.material,v.material)||null);const w=p.type&T.KINEMATIC&&v.type&T.STATIC||p.type&T.STATIC&&v.type&T.KINEMATIC||p.type&T.KINEMATIC&&v.type&T.KINEMATIC;for(let m=0;m<p.shapes.length;m++){p.quaternion.mult(p.shapeOrientations[m],a),p.quaternion.vmult(p.shapeOffsets[m],h),h.vadd(p.position,h);const x=p.shapes[m];for(let b=0;b<v.shapes.length;b++){v.quaternion.mult(v.shapeOrientations[b],l),v.quaternion.vmult(v.shapeOffsets[b],u),u.vadd(v.position,u);const S=v.shapes[b];if(!(x.collisionFilterMask&S.collisionFilterGroup&&S.collisionFilterMask&x.collisionFilterGroup)||h.distanceTo(u)>x.boundingSphereRadius+S.boundingSphereRadius)continue;let g=null;x.material&&S.material&&(g=s.getContactMaterial(x.material,S.material)||null),this.currentContactMaterial=g||y||s.defaultContactMaterial;const C=x.type|S.type,I=this[C];if(I){let R=!1;x.type<S.type?R=I.call(this,x,S,h,u,a,l,p,v,x,S,w):R=I.call(this,S,x,u,h,l,a,v,p,x,S,w),R&&w&&(s.shapeOverlapKeeper.set(x.id,S.id),s.bodyOverlapKeeper.set(p.id,v.id))}}}}}sphereSphere(t,e,s,i,n,o,r,a,l,h,u){if(u)return s.distanceSquared(i)<(t.radius+e.radius)**2;const c=this.createContactEquation(r,a,t,e,l,h);i.vsub(s,c.ni),c.ni.normalize(),c.ri.copy(c.ni),c.rj.copy(c.ni),c.ri.scale(t.radius,c.ri),c.rj.scale(-e.radius,c.rj),c.ri.vadd(s,c.ri),c.ri.vsub(r.position,c.ri),c.rj.vadd(i,c.rj),c.rj.vsub(a.position,c.rj),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}spherePlane(t,e,s,i,n,o,r,a,l,h,u){const c=this.createContactEquation(r,a,t,e,l,h);if(c.ni.set(0,0,1),o.vmult(c.ni,c.ni),c.ni.negate(c.ni),c.ni.normalize(),c.ni.scale(t.radius,c.ri),s.vsub(i,Vt),c.ni.scale(c.ni.dot(Vt),Le),Vt.vsub(Le,c.rj),-Vt.dot(c.ni)<=t.radius){if(u)return!0;const f=c.ri,p=c.rj;f.vadd(s,f),f.vsub(r.position,f),p.vadd(i,p),p.vsub(a.position,p),this.result.push(c),this.createFrictionEquationsFromContact(c,this.frictionResult)}}boxBox(t,e,s,i,n,o,r,a,l,h,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,i,n,o,r,a,t,e,u)}sphereBox(t,e,s,i,n,o,r,a,l,h,u){const c=this.v3pool,f=Un;s.vsub(i,Wt),e.getSideNormals(f,o);const p=t.radius;let v=!1;const y=Xn,w=Zn,m=Kn;let x=null,b=0,S=0,g=0,C=null;for(let P=0,V=f.length;P!==V&&v===!1;P++){const O=Wn;O.copy(f[P]);const j=O.length();O.normalize();const Z=Wt.dot(O);if(Z<j+p&&Z>0){const X=Yn,L=Hn;X.copy(f[(P+1)%3]),L.copy(f[(P+2)%3]);const wt=X.length(),Ot=L.length();X.normalize(),L.normalize();const Gt=Wt.dot(X),Xt=Wt.dot(L);if(Gt<wt&&Gt>-wt&&Xt<Ot&&Xt>-Ot){const ue=Math.abs(Z-j-p);if((C===null||ue<C)&&(C=ue,S=Gt,g=Xt,x=j,y.copy(O),w.copy(X),m.copy(L),b++,u))return!0}}}if(b){v=!0;const P=this.createContactEquation(r,a,t,e,l,h);y.scale(-p,P.ri),P.ni.copy(y),P.ni.negate(P.ni),y.scale(x,y),w.scale(S,w),y.vadd(w,y),m.scale(g,m),y.vadd(m,P.rj),P.ri.vadd(s,P.ri),P.ri.vsub(r.position,P.ri),P.rj.vadd(i,P.rj),P.rj.vsub(a.position,P.rj),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}let I=c.get();const R=Gn;for(let P=0;P!==2&&!v;P++)for(let V=0;V!==2&&!v;V++)for(let O=0;O!==2&&!v;O++)if(I.set(0,0,0),P?I.vadd(f[0],I):I.vsub(f[0],I),V?I.vadd(f[1],I):I.vsub(f[1],I),O?I.vadd(f[2],I):I.vsub(f[2],I),i.vadd(I,R),R.vsub(s,R),R.lengthSquared()<p*p){if(u)return!0;v=!0;const j=this.createContactEquation(r,a,t,e,l,h);j.ri.copy(R),j.ri.normalize(),j.ni.copy(j.ri),j.ri.scale(p,j.ri),j.rj.copy(I),j.ri.vadd(s,j.ri),j.ri.vsub(r.position,j.ri),j.rj.vadd(i,j.rj),j.rj.vsub(a.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}c.release(I),I=null;const N=c.get(),F=c.get(),B=c.get(),E=c.get(),M=c.get(),z=f.length;for(let P=0;P!==z&&!v;P++)for(let V=0;V!==z&&!v;V++)if(P%3!==V%3){f[V].cross(f[P],N),N.normalize(),f[P].vadd(f[V],F),B.copy(s),B.vsub(F,B),B.vsub(i,B);const O=B.dot(N);N.scale(O,E);let j=0;for(;j===P%3||j===V%3;)j++;M.copy(s),M.vsub(E,M),M.vsub(F,M),M.vsub(i,M);const Z=Math.abs(O),X=M.length();if(Z<f[j].length()&&X<p){if(u)return!0;v=!0;const L=this.createContactEquation(r,a,t,e,l,h);F.vadd(E,L.rj),L.rj.copy(L.rj),M.negate(L.ni),L.ni.normalize(),L.ri.copy(L.rj),L.ri.vadd(i,L.ri),L.ri.vsub(s,L.ri),L.ri.normalize(),L.ri.scale(p,L.ri),L.ri.vadd(s,L.ri),L.ri.vsub(r.position,L.ri),L.rj.vadd(i,L.rj),L.rj.vsub(a.position,L.rj),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}c.release(N,F,B,E,M)}planeBox(t,e,s,i,n,o,r,a,l,h,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,i,n,o,r,a,t,e,u)}convexConvex(t,e,s,i,n,o,r,a,l,h,u,c,f){const p=uo;if(!(s.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,n,i,o,p,c,f)){const v=[],y=po;t.clipAgainstHull(s,n,e,i,o,p,-100,100,v);let w=0;for(let m=0;m!==v.length;m++){if(u)return!0;const x=this.createContactEquation(r,a,t,e,l,h),b=x.ri,S=x.rj;p.negate(x.ni),v[m].normal.negate(y),y.scale(v[m].depth,y),v[m].point.vadd(y,b),S.copy(v[m].point),b.vsub(s,b),S.vsub(i,S),b.vadd(s,b),b.vsub(r.position,b),S.vadd(i,S),S.vsub(a.position,S),this.result.push(x),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}}sphereConvex(t,e,s,i,n,o,r,a,l,h,u){const c=this.v3pool;s.vsub(i,$n);const f=e.faceNormals,p=e.faces,v=e.vertices,y=t.radius;let w=!1;for(let m=0;m!==v.length;m++){const x=v[m],b=eo;o.vmult(x,b),i.vadd(b,b);const S=to;if(b.vsub(s,S),S.lengthSquared()<y*y){if(u)return!0;w=!0;const g=this.createContactEquation(r,a,t,e,l,h);g.ri.copy(S),g.ri.normalize(),g.ni.copy(g.ri),g.ri.scale(y,g.ri),b.vsub(i,g.rj),g.ri.vadd(s,g.ri),g.ri.vsub(r.position,g.ri),g.rj.vadd(i,g.rj),g.rj.vsub(a.position,g.rj),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult);return}}for(let m=0,x=p.length;m!==x&&w===!1;m++){const b=f[m],S=p[m],g=so;o.vmult(b,g);const C=io;o.vmult(v[S[0]],C),C.vadd(i,C);const I=no;g.scale(-y,I),s.vadd(I,I);const R=oo;I.vsub(C,R);const N=R.dot(g),F=ro;if(s.vsub(C,F),N<0&&F.dot(g)>0){const B=[];for(let E=0,M=S.length;E!==M;E++){const z=c.get();o.vmult(v[S[E]],z),i.vadd(z,z),B.push(z)}if(Vn(B,g,s)){if(u)return!0;w=!0;const E=this.createContactEquation(r,a,t,e,l,h);g.scale(-y,E.ri),g.negate(E.ni);const M=c.get();g.scale(-N,M);const z=c.get();g.scale(-y,z),s.vsub(i,E.rj),E.rj.vadd(z,E.rj),E.rj.vadd(M,E.rj),E.rj.vadd(i,E.rj),E.rj.vsub(a.position,E.rj),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),c.release(M),c.release(z),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let P=0,V=B.length;P!==V;P++)c.release(B[P]);return}else for(let E=0;E!==S.length;E++){const M=c.get(),z=c.get();o.vmult(v[S[(E+1)%S.length]],M),o.vmult(v[S[(E+2)%S.length]],z),i.vadd(M,M),i.vadd(z,z);const P=Qn;z.vsub(M,P);const V=Jn;P.unit(V);const O=c.get(),j=c.get();s.vsub(M,j);const Z=j.dot(V);V.scale(Z,O),O.vadd(M,O);const X=c.get();if(O.vsub(s,X),Z>0&&Z*Z<P.lengthSquared()&&X.lengthSquared()<y*y){if(u)return!0;const L=this.createContactEquation(r,a,t,e,l,h);O.vsub(i,L.rj),O.vsub(s,L.ni),L.ni.normalize(),L.ni.scale(y,L.ri),L.rj.vadd(i,L.rj),L.rj.vsub(a.position,L.rj),L.ri.vadd(s,L.ri),L.ri.vsub(r.position,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult);for(let wt=0,Ot=B.length;wt!==Ot;wt++)c.release(B[wt]);c.release(M),c.release(z),c.release(O),c.release(X),c.release(j);return}c.release(M),c.release(z),c.release(O),c.release(X),c.release(j)}for(let E=0,M=B.length;E!==M;E++)c.release(B[E])}}}planeConvex(t,e,s,i,n,o,r,a,l,h,u){const c=ao,f=lo;f.set(0,0,1),n.vmult(f,f);let p=0;const v=co;for(let y=0;y!==e.vertices.length;y++)if(c.copy(e.vertices[y]),o.vmult(c,c),i.vadd(c,c),c.vsub(s,v),f.dot(v)<=0){if(u)return!0;const m=this.createContactEquation(r,a,t,e,l,h),x=ho;f.scale(f.dot(v),x),c.vsub(x,x),x.vsub(s,m.ri),m.ni.copy(f),c.vsub(i,m.rj),m.ri.vadd(s,m.ri),m.ri.vsub(r.position,m.ri),m.rj.vadd(i,m.rj),m.rj.vsub(a.position,m.rj),this.result.push(m),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,i,n,o,r,a,l,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,i,n,o,r,a,t,e,u)}sphereHeightfield(t,e,s,i,n,o,r,a,l,h,u){const c=e.data,f=t.radius,p=e.elementSize,v=Po,y=So;q.pointToLocalFrame(i,o,s,y);let w=Math.floor((y.x-f)/p)-1,m=Math.ceil((y.x+f)/p)+1,x=Math.floor((y.y-f)/p)-1,b=Math.ceil((y.y+f)/p)+1;if(m<0||b<0||w>c.length||x>c[0].length)return;w<0&&(w=0),m<0&&(m=0),x<0&&(x=0),b<0&&(b=0),w>=c.length&&(w=c.length-1),m>=c.length&&(m=c.length-1),b>=c[0].length&&(b=c[0].length-1),x>=c[0].length&&(x=c[0].length-1);const S=[];e.getRectMinMax(w,x,m,b,S);const g=S[0],C=S[1];if(y.z-f>C||y.z+f<g)return;const I=this.result;for(let R=w;R<m;R++)for(let N=x;N<b;N++){const F=I.length;let B=!1;if(e.getConvexTrianglePillar(R,N,!1),q.pointToWorldFrame(i,o,e.pillarOffset,v),s.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(B=this.sphereConvex(t,e.pillarConvex,s,v,n,o,r,a,t,e,u)),u&&B||(e.getConvexTrianglePillar(R,N,!0),q.pointToWorldFrame(i,o,e.pillarOffset,v),s.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(B=this.sphereConvex(t,e.pillarConvex,s,v,n,o,r,a,t,e,u)),u&&B))return!0;if(I.length-F>2)return}}boxHeightfield(t,e,s,i,n,o,r,a,l,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,i,n,o,r,a,t,e,u)}convexHeightfield(t,e,s,i,n,o,r,a,l,h,u){const c=e.data,f=e.elementSize,p=t.boundingSphereRadius,v=_o,y=Eo,w=xo;q.pointToLocalFrame(i,o,s,w);let m=Math.floor((w.x-p)/f)-1,x=Math.ceil((w.x+p)/f)+1,b=Math.floor((w.y-p)/f)-1,S=Math.ceil((w.y+p)/f)+1;if(x<0||S<0||m>c.length||b>c[0].length)return;m<0&&(m=0),x<0&&(x=0),b<0&&(b=0),S<0&&(S=0),m>=c.length&&(m=c.length-1),x>=c.length&&(x=c.length-1),S>=c[0].length&&(S=c[0].length-1),b>=c[0].length&&(b=c[0].length-1);const g=[];e.getRectMinMax(m,b,x,S,g);const C=g[0],I=g[1];if(!(w.z-p>I||w.z+p<C))for(let R=m;R<x;R++)for(let N=b;N<S;N++){let F=!1;if(e.getConvexTrianglePillar(R,N,!1),q.pointToWorldFrame(i,o,e.pillarOffset,v),s.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(F=this.convexConvex(t,e.pillarConvex,s,v,n,o,r,a,null,null,u,y,null)),u&&F||(e.getConvexTrianglePillar(R,N,!0),q.pointToWorldFrame(i,o,e.pillarOffset,v),s.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(F=this.convexConvex(t,e.pillarConvex,s,v,n,o,r,a,null,null,u,y,null)),u&&F))return!0}}sphereParticle(t,e,s,i,n,o,r,a,l,h,u){const c=yo;if(c.set(0,0,1),i.vsub(s,c),c.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(a,r,e,t,l,h);c.normalize(),p.rj.copy(c),p.rj.scale(t.radius,p.rj),p.ni.copy(c),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,s,i,n,o,r,a,l,h,u){const c=fo;c.set(0,0,1),r.quaternion.vmult(c,c);const f=mo;if(i.vsub(r.position,f),c.dot(f)<=0){if(u)return!0;const v=this.createContactEquation(a,r,e,t,l,h);v.ni.copy(c),v.ni.negate(v.ni),v.ri.set(0,0,0);const y=vo;c.scale(c.dot(i),y),i.vsub(y,y),v.rj.copy(y),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}boxParticle(t,e,s,i,n,o,r,a,l,h,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,i,n,o,r,a,t,e,u)}convexParticle(t,e,s,i,n,o,r,a,l,h,u){let c=-1;const f=go,p=bo;let v=null;const y=wo;if(y.copy(i),y.vsub(s,y),n.conjugate(Fe),Fe.vmult(y,y),t.pointIsInside(y)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,n),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(n);for(let w=0,m=t.faces.length;w!==m;w++){const x=[t.worldVertices[t.faces[w][0]]],b=t.worldFaceNormals[w];i.vsub(x[0],Re);const S=-b.dot(Re);if(v===null||Math.abs(S)<Math.abs(v)){if(u)return!0;v=S,c=w,f.copy(b)}}if(c!==-1){const w=this.createContactEquation(a,r,e,t,l,h);f.scale(v,p),p.vadd(i,p),p.vsub(s,p),w.rj.copy(p),f.negate(w.ni),w.ri.set(0,0,0);const m=w.ri,x=w.rj;m.vadd(i,m),m.vsub(a.position,m),x.vadd(s,x),x.vsub(r.position,x),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}}}heightfieldCylinder(t,e,s,i,n,o,r,a,l,h,u){return this.convexHeightfield(e,t,i,s,o,n,a,r,l,h,u)}particleCylinder(t,e,s,i,n,o,r,a,l,h,u){return this.convexParticle(e,t,i,s,o,n,a,r,l,h,u)}sphereTrimesh(t,e,s,i,n,o,r,a,l,h,u){const c=Mn,f=Tn,p=An,v=Nn,y=In,w=Ln,m=Bn,x=zn,b=Pn,S=jn;q.pointToLocalFrame(i,o,s,y);const g=t.radius;m.lowerBound.set(y.x-g,y.y-g,y.z-g),m.upperBound.set(y.x+g,y.y+g,y.z+g),e.getTrianglesInAABB(m,S);const C=Cn,I=t.radius*t.radius;for(let E=0;E<S.length;E++)for(let M=0;M<3;M++)if(e.getVertex(e.indices[S[E]*3+M],C),C.vsub(y,b),b.lengthSquared()<=I){if(x.copy(C),q.pointToWorldFrame(i,o,x,C),C.vsub(s,b),u)return!0;let z=this.createContactEquation(r,a,t,e,l,h);z.ni.copy(b),z.ni.normalize(),z.ri.copy(z.ni),z.ri.scale(t.radius,z.ri),z.ri.vadd(s,z.ri),z.ri.vsub(r.position,z.ri),z.rj.copy(C),z.rj.vsub(a.position,z.rj),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult)}for(let E=0;E<S.length;E++)for(let M=0;M<3;M++){e.getVertex(e.indices[S[E]*3+M],c),e.getVertex(e.indices[S[E]*3+(M+1)%3],f),f.vsub(c,p),y.vsub(f,w);const z=w.dot(p);y.vsub(c,w);let P=w.dot(p);if(P>0&&z<0&&(y.vsub(c,w),v.copy(p),v.normalize(),P=w.dot(v),v.scale(P,w),w.vadd(c,w),w.distanceTo(y)<t.radius)){if(u)return!0;const O=this.createContactEquation(r,a,t,e,l,h);w.vsub(y,O.ni),O.ni.normalize(),O.ni.scale(t.radius,O.ri),O.ri.vadd(s,O.ri),O.ri.vsub(r.position,O.ri),q.pointToWorldFrame(i,o,w,w),w.vsub(a.position,O.rj),q.vectorToWorldFrame(o,O.ni,O.ni),q.vectorToWorldFrame(o,O.ri,O.ri),this.result.push(O),this.createFrictionEquationsFromContact(O,this.frictionResult)}}const R=Fn,N=Rn,F=On,B=Sn;for(let E=0,M=S.length;E!==M;E++){e.getTriangleVertices(S[E],R,N,F),e.getNormal(S[E],B),y.vsub(R,w);let z=w.dot(B);if(B.scale(z,w),y.vsub(w,w),z=w.distanceTo(y),W.pointInTriangle(w,R,N,F)&&z<t.radius){if(u)return!0;let P=this.createContactEquation(r,a,t,e,l,h);w.vsub(y,P.ni),P.ni.normalize(),P.ni.scale(t.radius,P.ri),P.ri.vadd(s,P.ri),P.ri.vsub(r.position,P.ri),q.pointToWorldFrame(i,o,w,w),w.vsub(a.position,P.rj),q.vectorToWorldFrame(o,P.ni,P.ni),q.vectorToWorldFrame(o,P.ri,P.ri),this.result.push(P),this.createFrictionEquationsFromContact(P,this.frictionResult)}}S.length=0}planeTrimesh(t,e,s,i,n,o,r,a,l,h,u){const c=new d,f=xn;f.set(0,0,1),n.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,c);const v=new d;v.copy(c),q.pointToWorldFrame(i,o,v,c);const y=_n;if(c.vsub(s,y),f.dot(y)<=0){if(u)return!0;const m=this.createContactEquation(r,a,t,e,l,h);m.ni.copy(f);const x=En;f.scale(y.dot(f),x),c.vsub(x,x),m.ri.copy(x),m.ri.vsub(r.position,m.ri),m.rj.copy(c),m.rj.vsub(a.position,m.rj),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}}}const pt=new d,bt=new d,xt=new d,yn=new d,wn=new d,gn=new H,bn=new H,xn=new d,_n=new d,En=new d,Sn=new d,Pn=new d,Cn=new d,zn=new d,Mn=new d,Tn=new d,An=new d,Nn=new d,In=new d,Ln=new d,Fn=new d,Rn=new d,On=new d,Bn=new Q,jn=[],Vt=new d,Le=new d,qn=new d,Dn=new d,kn=new d;function Vn(_,t,e){let s=null;const i=_.length;for(let n=0;n!==i;n++){const o=_[n],r=qn;_[(n+1)%i].vsub(o,r);const a=Dn;r.cross(t,a);const l=kn;e.vsub(o,l);const h=a.dot(l);if(s===null||h>0&&s===!0||h<=0&&s===!1){s===null&&(s=h>0);continue}else return!1}return!0}const Wt=new d,Wn=new d,Yn=new d,Hn=new d,Un=[new d,new d,new d,new d,new d,new d],Gn=new d,Xn=new d,Zn=new d,Kn=new d,$n=new d,Qn=new d,Jn=new d,to=new d,eo=new d,so=new d,io=new d,no=new d,oo=new d,ro=new d,ao=new d,lo=new d,co=new d,ho=new d,uo=new d,po=new d,fo=new d,mo=new d,vo=new d,yo=new d,Fe=new H,wo=new d,go=new d,Re=new d,bo=new d,xo=new d,_o=new d,Eo=[0],So=new d,Po=new d;class Oe{constructor(){this.current=void 0,this.previous=void 0,this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),i=this.current;let n=0;for(;s>i[n];)n++;if(s!==i[n]){for(let o=i.length-1;o>=n;o--)i[o+1]=i[o];i[n]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,i=this.previous,n=s.length,o=i.length;let r=0;for(let a=0;a<n;a++){let l=!1;const h=s[a];for(;h>i[r];)r++;l=h===i[r],l||Be(t,h)}r=0;for(let a=0;a<o;a++){let l=!1;const h=i[a];for(;h>s[r];)r++;l=s[r]===h,l||Be(e,h)}}}function Be(_,t){_.push((t&4294901760)>>16,t&65535)}class Co{constructor(){this.data={keys:[]}}get(t,e){if(t>e){const s=e;e=t,t=s}return this.data[t+"-"+e]}set(t,e,s){if(t>e){const n=e;e=t,t=n}const i=t+"-"+e;this.get(t,e)||this.data.keys.push(i),this.data[i]=s}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const s=e.pop();delete t[s]}}}class zo extends Ke{constructor(t={}){super(),this.dt=void 0,this.allowSleep=void 0,this.contacts=void 0,this.frictionEquations=void 0,this.quatNormalizeSkip=void 0,this.quatNormalizeFast=void 0,this.time=void 0,this.stepnumber=void 0,this.default_dt=void 0,this.nextId=void 0,this.gravity=void 0,this.broadphase=void 0,this.bodies=void 0,this.hasActiveBodies=void 0,this.solver=void 0,this.constraints=void 0,this.narrowphase=void 0,this.collisionMatrix=void 0,this.collisionMatrixPrevious=void 0,this.bodyOverlapKeeper=void 0,this.shapeOverlapKeeper=void 0,this.materials=void 0,this.contactmaterials=void 0,this.contactMaterialTable=void 0,this.defaultMaterial=void 0,this.defaultContactMaterial=void 0,this.doProfiling=void 0,this.profile=void 0,this.accumulator=void 0,this.subsystems=void 0,this.addBodyEvent=void 0,this.removeBodyEvent=void 0,this.idToBodyMap=void 0,this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new d,t.gravity&&this.gravity.copy(t.gravity),this.broadphase=t.broadphase!==void 0?t.broadphase:new $e,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new hn,this.constraints=[],this.narrowphase=new vn(this),this.collisionMatrix=new _e,this.collisionMatrixPrevious=new _e,this.bodyOverlapKeeper=new Oe,this.shapeOverlapKeeper=new Oe,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new Co,this.defaultMaterial=new Ct("default"),this.defaultContactMaterial=new Ft(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}numObjects(){return this.bodies.length}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof oe?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s={},i){return s.mode=W.ALL,s.from=t,s.to=e,s.callback=i,se.intersectWorld(this,s)}raycastAny(t,e,s={},i){return s.mode=W.ANY,s.from=t,s.to=e,s.result=i,se.intersectWorld(this,s)}raycastClosest(t,e,s={},i){return s.mode=W.CLOSEST,s.from=t,s.to=e,s.result=i,se.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof T&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,i=s.indexOf(t);if(i!==-1){s.splice(i,1);for(let n=0;n!==s.length;n++)s[n].index=n;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const i=e[s].shapes;for(let n=0;n<i.length;n++){const o=i[n];if(o.id===t)return o}}return null}addMaterial(t){this.materials.push(t)}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}step(t,e,s=10){if(e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const i=U.now();let n=0;for(;this.accumulator>=t&&n<s&&(this.internalStep(t),this.accumulator-=t,n++,!(U.now()-i>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const a=this.bodies[r];a.previousPosition.lerp(a.position,o,a.interpolatedPosition),a.previousQuaternion.slerp(a.quaternion,o,a.interpolatedQuaternion),a.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=Io,i=Lo,n=this.numObjects(),o=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,h=this.profile,u=T.DYNAMIC;let c=-1/0;const f=this.constraints,p=No;a.length();const v=a.x,y=a.y,w=a.z;let m=0;for(l&&(c=U.now()),m=0;m!==n;m++){const E=o[m];if(E.type===u){const M=E.force,z=E.mass;M.x+=z*v,M.y+=z*y,M.z+=z*w}}for(let E=0,M=this.subsystems.length;E!==M;E++)this.subsystems[E].update();l&&(c=U.now()),s.length=0,i.length=0,this.broadphase.collisionPairs(this,s,i),l&&(h.broadphase=U.now()-c);let x=f.length;for(m=0;m!==x;m++){const E=f[m];if(!E.collideConnected)for(let M=s.length-1;M>=0;M-=1)(E.bodyA===s[M]&&E.bodyB===i[M]||E.bodyB===s[M]&&E.bodyA===i[M])&&(s.splice(M,1),i.splice(M,1))}this.collisionMatrixTick(),l&&(c=U.now());const b=Ao,S=e.length;for(m=0;m!==S;m++)b.push(e[m]);e.length=0;const g=this.frictionEquations.length;for(m=0;m!==g;m++)p.push(this.frictionEquations[m]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,i,this,e,b,this.frictionEquations,p),l&&(h.narrowphase=U.now()-c),l&&(c=U.now()),m=0;m<this.frictionEquations.length;m++)r.addEquation(this.frictionEquations[m]);const C=e.length;for(let E=0;E!==C;E++){const M=e[E],z=M.bi,P=M.bj,V=M.si,O=M.sj;let j;if(z.material&&P.material?j=this.getContactMaterial(z.material,P.material)||this.defaultContactMaterial:j=this.defaultContactMaterial,j.friction,z.material&&P.material&&(z.material.friction>=0&&P.material.friction>=0&&z.material.friction*P.material.friction,z.material.restitution>=0&&P.material.restitution>=0&&(M.restitution=z.material.restitution*P.material.restitution)),r.addEquation(M),z.allowSleep&&z.type===T.DYNAMIC&&z.sleepState===T.SLEEPING&&P.sleepState===T.AWAKE&&P.type!==T.STATIC){const Z=P.velocity.lengthSquared()+P.angularVelocity.lengthSquared(),X=P.sleepSpeedLimit**2;Z>=X*2&&(z.wakeUpAfterNarrowphase=!0)}if(P.allowSleep&&P.type===T.DYNAMIC&&P.sleepState===T.SLEEPING&&z.sleepState===T.AWAKE&&z.type!==T.STATIC){const Z=z.velocity.lengthSquared()+z.angularVelocity.lengthSquared(),X=z.sleepSpeedLimit**2;Z>=X*2&&(P.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(z,P,!0),this.collisionMatrixPrevious.get(z,P)||(Tt.body=P,Tt.contact=M,z.dispatchEvent(Tt),Tt.body=z,P.dispatchEvent(Tt)),this.bodyOverlapKeeper.set(z.id,P.id),this.shapeOverlapKeeper.set(V.id,O.id)}for(this.emitContactEvents(),l&&(h.makeContactConstraints=U.now()-c,c=U.now()),m=0;m!==n;m++){const E=o[m];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(x=f.length,m=0;m!==x;m++){const E=f[m];E.update();for(let M=0,z=E.equations.length;M!==z;M++){const P=E.equations[M];r.addEquation(P)}}r.solve(t,this),l&&(h.solve=U.now()-c),r.removeAllEquations();const I=Math.pow;for(m=0;m!==n;m++){const E=o[m];if(E.type&u){const M=I(1-E.linearDamping,t),z=E.velocity;z.scale(M,z);const P=E.angularVelocity;if(P){const V=I(1-E.angularDamping,t);P.scale(V,P)}}}for(this.dispatchEvent(To),m=0;m!==n;m++){const E=o[m];E.preStep&&E.preStep.call(E)}l&&(c=U.now());const N=this.stepnumber%(this.quatNormalizeSkip+1)===0,F=this.quatNormalizeFast;for(m=0;m!==n;m++)o[m].integrate(t,N,F);for(this.clearForces(),this.broadphase.dirty=!0,l&&(h.integrate=U.now()-c),this.stepnumber+=1,this.dispatchEvent(Mo),m=0;m!==n;m++){const E=o[m],M=E.postStep;M&&M.call(E)}let B=!0;if(this.allowSleep)for(B=!1,m=0;m!==n;m++){const E=o[m];E.sleepTick(this.time),E.sleepState!==T.SLEEPING&&(B=!0)}this.hasActiveBodies=B}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(at,lt),t){for(let n=0,o=at.length;n<o;n+=2)At.bodyA=this.getBodyById(at[n]),At.bodyB=this.getBodyById(at[n+1]),this.dispatchEvent(At);At.bodyA=At.bodyB=null}if(e){for(let n=0,o=lt.length;n<o;n+=2)Nt.bodyA=this.getBodyById(lt[n]),Nt.bodyB=this.getBodyById(lt[n+1]),this.dispatchEvent(Nt);Nt.bodyA=Nt.bodyB=null}at.length=lt.length=0;const s=this.hasAnyEventListener("beginShapeContact"),i=this.hasAnyEventListener("endShapeContact");if((s||i)&&this.shapeOverlapKeeper.getDiff(at,lt),s){for(let n=0,o=at.length;n<o;n+=2){const r=this.getShapeById(at[n]),a=this.getShapeById(at[n+1]);ct.shapeA=r,ct.shapeB=a,r&&(ct.bodyA=r.body),a&&(ct.bodyB=a.body),this.dispatchEvent(ct)}ct.bodyA=ct.bodyB=ct.shapeA=ct.shapeB=null}if(i){for(let n=0,o=lt.length;n<o;n+=2){const r=this.getShapeById(lt[n]),a=this.getShapeById(lt[n+1]);ht.shapeA=r,ht.shapeB=a,r&&(ht.bodyA=r.body),a&&(ht.bodyB=a.body),this.dispatchEvent(ht)}ht.bodyA=ht.bodyB=ht.shapeA=ht.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const i=t[s];i.force,i.torque,i.force.set(0,0,0),i.torque.set(0,0,0)}}}new Q;const se=new W,U=globalThis.performance||{};if(!U.now){let _=Date.now();U.timing&&U.timing.navigationStart&&(_=U.timing.navigationStart),U.now=()=>Date.now()-_}const Mo={type:"postStep"},To={type:"preStep"},Tt={type:T.COLLIDE_EVENT_NAME,body:null,contact:null},Ao=[],No=[],Io=[],Lo=[],at=[],lt=[],At={type:"beginContact",bodyA:null,bodyB:null},Nt={type:"endContact",bodyA:null,bodyB:null},ct={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},ht={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Fo=/^[og]\s*(.+)?/,Ro=/^mtllib /,Oo=/^usemtl /,Bo=/^usemap /,je=/\s+/,qe=new G,ie=new G,De=new G,ke=new G,J=new G,Yt=new Ue;function jo(){const _={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&this.object.fromDeclaration===!1){this.object.name=t,this.object.fromDeclaration=e!==!1;return}const s=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:e!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(i,n){const o=this._finalize(!1);o&&(o.inherited||o.groupCount<=0)&&this.materials.splice(o.index,1);const r={index:this.materials.length,name:i||"",mtllib:Array.isArray(n)&&n.length>0?n[n.length-1]:"",smooth:o!==void 0?o.smooth:this.smooth,groupStart:o!==void 0?o.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){const l={index:typeof a=="number"?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return l.clone=this.clone.bind(l),l}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(i){const n=this.currentMaterial();if(n&&n.groupEnd===-1&&(n.groupEnd=this.geometry.vertices.length/3,n.groupCount=n.groupEnd-n.groupStart,n.inherited=!1),i&&this.materials.length>1)for(let o=this.materials.length-1;o>=0;o--)this.materials[o].groupCount<=0&&this.materials.splice(o,1);return i&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),n}},s&&s.name&&typeof s.clone=="function"){const i=s.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const s=parseInt(t,10);return(s>=0?s-1:s+e/3)*3},parseNormalIndex:function(t,e){const s=parseInt(t,10);return(s>=0?s-1:s+e/3)*3},parseUVIndex:function(t,e){const s=parseInt(t,10);return(s>=0?s-1:s+e/2)*2},addVertex:function(t,e,s){const i=this.vertices,n=this.object.geometry.vertices;n.push(i[t+0],i[t+1],i[t+2]),n.push(i[e+0],i[e+1],i[e+2]),n.push(i[s+0],i[s+1],i[s+2])},addVertexPoint:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,s){const i=this.normals,n=this.object.geometry.normals;n.push(i[t+0],i[t+1],i[t+2]),n.push(i[e+0],i[e+1],i[e+2]),n.push(i[s+0],i[s+1],i[s+2])},addFaceNormal:function(t,e,s){const i=this.vertices,n=this.object.geometry.normals;qe.fromArray(i,t),ie.fromArray(i,e),De.fromArray(i,s),J.subVectors(De,ie),ke.subVectors(qe,ie),J.cross(ke),J.normalize(),n.push(J.x,J.y,J.z),n.push(J.x,J.y,J.z),n.push(J.x,J.y,J.z)},addColor:function(t,e,s){const i=this.colors,n=this.object.geometry.colors;i[t]!==void 0&&n.push(i[t+0],i[t+1],i[t+2]),i[e]!==void 0&&n.push(i[e+0],i[e+1],i[e+2]),i[s]!==void 0&&n.push(i[s+0],i[s+1],i[s+2])},addUV:function(t,e,s){const i=this.uvs,n=this.object.geometry.uvs;n.push(i[t+0],i[t+1]),n.push(i[e+0],i[e+1]),n.push(i[s+0],i[s+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,s,i,n,o,r,a,l){const h=this.vertices.length;let u=this.parseVertexIndex(t,h),c=this.parseVertexIndex(e,h),f=this.parseVertexIndex(s,h);if(this.addVertex(u,c,f),this.addColor(u,c,f),r!==void 0&&r!==""){const p=this.normals.length;u=this.parseNormalIndex(r,p),c=this.parseNormalIndex(a,p),f=this.parseNormalIndex(l,p),this.addNormal(u,c,f)}else this.addFaceNormal(u,c,f);if(i!==void 0&&i!==""){const p=this.uvs.length;u=this.parseUVIndex(i,p),c=this.parseUVIndex(n,p),f=this.parseUVIndex(o,p),this.addUV(u,c,f),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let s=0,i=t.length;s<i;s++){const n=this.parseVertexIndex(t[s],e);this.addVertexPoint(n),this.addColor(n)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const s=this.vertices.length,i=this.uvs.length;for(let n=0,o=t.length;n<o;n++)this.addVertexLine(this.parseVertexIndex(t[n],s));for(let n=0,o=e.length;n<o;n++)this.addUVLine(this.parseUVIndex(e[n],i))}};return _.startObject("",!1),_}class qo extends Fs{constructor(t){super(t),this.materials=null}load(t,e,s,i){const n=this,o=new Rs(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(r){try{e(n.parse(r))}catch(a){i&&i(a),n.manager.itemError(t)}},s,i)}setMaterials(t){return this.materials=t,this}parse(t){const e=new jo;t.indexOf(`\r
`)!==-1&&(t=t.replace(/\r\n/g,`
`)),t.indexOf(`\\
`)!==-1&&(t=t.replace(/\\\n/g,""));const s=t.split(`
`);let i=[];for(let r=0,a=s.length;r<a;r++){const l=s[r].trimStart();if(l.length===0)continue;const h=l.charAt(0);if(h!=="#"){if(h==="v"){const u=l.split(je);switch(u[0]){case"v":e.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),u.length>=7?(Yt.setRGB(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6]),Os),e.colors.push(Yt.r,Yt.g,Yt.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":e.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(h==="f"){const c=l.slice(1).trim().split(je),f=[];for(let v=0,y=c.length;v<y;v++){const w=c[v];if(w.length>0){const m=w.split("/");f.push(m)}}const p=f[0];for(let v=1,y=f.length-1;v<y;v++){const w=f[v],m=f[v+1];e.addFace(p[0],w[0],m[0],p[1],w[1],m[1],p[2],w[2],m[2])}}else if(h==="l"){const u=l.substring(1).trim().split(" ");let c=[];const f=[];if(l.indexOf("/")===-1)c=u;else for(let p=0,v=u.length;p<v;p++){const y=u[p].split("/");y[0]!==""&&c.push(y[0]),y[1]!==""&&f.push(y[1])}e.addLineGeometry(c,f)}else if(h==="p"){const c=l.slice(1).trim().split(" ");e.addPointGeometry(c)}else if((i=Fo.exec(l))!==null){const u=(" "+i[0].slice(1).trim()).slice(1);e.startObject(u)}else if(Oo.test(l))e.object.startMaterial(l.substring(7).trim(),e.materialLibraries);else if(Ro.test(l))e.materialLibraries.push(l.substring(7).trim());else if(!Bo.test(l)){if(h==="s"){if(i=l.split(" "),i.length>1){const c=i[1].trim().toLowerCase();e.object.smooth=c!=="0"&&c!=="off"}else e.object.smooth=!0;const u=e.object.currentMaterial();u&&(u.smooth=e.object.smooth)}else if(l==="\0")continue}}}e.finalize();const n=new Ge;if(n.materialLibraries=[].concat(e.materialLibraries),!(e.objects.length===1&&e.objects[0].geometry.vertices.length===0)===!0)for(let r=0,a=e.objects.length;r<a;r++){const l=e.objects[r],h=l.geometry,u=l.materials,c=h.type==="Line",f=h.type==="Points";let p=!1;if(h.vertices.length===0)continue;const v=new fe;v.setAttribute("position",new gt(h.vertices,3)),h.normals.length>0&&v.setAttribute("normal",new gt(h.normals,3)),h.colors.length>0&&(p=!0,v.setAttribute("color",new gt(h.colors,3))),h.hasUVIndices===!0&&v.setAttribute("uv",new gt(h.uvs,2));const y=[];for(let m=0,x=u.length;m<x;m++){const b=u[m],S=b.name+"_"+b.smooth+"_"+p;let g=e.materials[S];if(this.materials!==null){if(g=this.materials.create(b.name),c&&g&&!(g instanceof Zt)){const C=new Zt;me.prototype.copy.call(C,g),C.color.copy(g.color),g=C}else if(f&&g&&!(g instanceof Bt)){const C=new Bt({size:10,sizeAttenuation:!1});me.prototype.copy.call(C,g),C.color.copy(g.color),C.map=g.map,g=C}}g===void 0&&(c?g=new Zt:f?g=new Bt({size:1,sizeAttenuation:!1}):g=new Bs,g.name=b.name,g.flatShading=!b.smooth,g.vertexColors=p,e.materials[S]=g),y.push(g)}let w;if(y.length>1){for(let m=0,x=u.length;m<x;m++){const b=u[m];v.addGroup(b.groupStart,b.groupCount,m)}c?w=new ve(v,y):f?w=new Kt(v,y):w=new Ht(v,y)}else c?w=new ve(v,y[0]):f?w=new Kt(v,y[0]):w=new Ht(v,y[0]);w.name=l.name,n.add(w)}else if(e.vertices.length>0){const r=new Bt({size:1,sizeAttenuation:!1}),a=new fe;a.setAttribute("position",new gt(e.vertices,3)),e.colors.length>0&&e.colors[0]!==void 0&&(a.setAttribute("color",new gt(e.colors,3)),r.vertexColors=!0);const l=new Kt(a,r);n.add(l)}return n}}const vt=new js;vt.background=new Ue(16777215);const It=new qs(45,window.innerWidth/window.innerHeight,.1,100);It.position.set(0,2,25);const yt=new Ds({antialias:!0});yt.setSize(window.innerWidth,window.innerHeight);yt.shadowMap.enabled=!0;yt.shadowMap.type=ks;document.body.appendChild(yt.domElement);const Ut=new Gs(It,yt.domElement);Ut.enableDamping=!0;Ut.dampingFactor=.1;Ut.rotateSpeed=1;const zt=new zo;zt.gravity.set(0,-12,0);zt.broadphase=new $e;zt.solver.iterations=7;const Do=new Vs(50,50),ko=new Xe({color:0}),de=new Ht(Do,ko);de.rotation.x=-Math.PI/2;de.receiveShadow=!0;vt.add(de);const Vo=new ln,Rt=new T({mass:0});Rt.addShape(Vo);Rt.quaternion.setFromEuler(-Math.PI/2,0,0);zt.addBody(Rt);Rt.material=new Ct({restitution:1});const Wo=new qo;Wo.load("/assets/objs/softbody/rock.obj",_=>{var u;_.traverse(c=>{c instanceof Ht&&(c.material=new Xe({color:3355443}),c.castShadow=!0,c.receiveShadow=!0)});const t=new Ws().setFromObject(_),e=new G;t.getCenter(e),_.position.sub(e);const s=new Ge;s.add(_),s.position.copy(e),vt.add(s);let i=_.children[0].geometry.clone();const n=i.attributes.position.array,o=((u=i.index)==null?void 0:u.array)||void 0,r=[];for(let c=0;c<n.length;c+=3)r.push(new d(n[c]-e.x,n[c+1]-e.y,n[c+2]-e.z));const a=[];if(o)for(let c=0;c<o.length;c+=3)a.push([o[c],o[c+1],o[c+2]]);else for(let c=0;c<r.length;c+=3)a.push([c,c+1,c+2]);const l=new St({vertices:r,faces:a}),h=new T({mass:1e3,position:new d(e.x,e.y+10,e.z)});h.addShape(l),zt.addBody(h),s.userData.physicsBody=h,h.material=new Ct({restitution:1}),new Ft(Rt.material,h.material,{friction:1.3,restitution:.6}),s.userData.centerDot=centerDot},_=>{},_=>{});const ut=new Ys(16777215,2);ut.position.set(3,5,2);ut.castShadow=!0;ut.shadow.mapSize.width=2048;ut.shadow.mapSize.height=2048;ut.shadow.camera.near=.5;ut.shadow.camera.far=10;ut.shadow.bias=-.002;vt.add(ut);const Yo=new Hs(4210752);vt.add(Yo);window.addEventListener("resize",()=>{yt.setSize(window.innerWidth,window.innerHeight),It.aspect=window.innerWidth/window.innerHeight,It.updateProjectionMatrix()});let Ve=1/60;const Ho=He.degToRad(135);let We=0,ft=1;const Uo=1;let ne=new Pt,Ye=new Pt;function As(){requestAnimationFrame(As),zt.step(Ve);const _=performance.now()/2e3;vt.traverse(t=>{if(t.userData.physicsBody){const e=t.userData.physicsBody,s=new Pt(e.quaternion.x,e.quaternion.y,e.quaternion.z,e.quaternion.w);if(_-We>=1&&ft>=1){We=_,ft=0,ne.copy(s);const i=new Pt;i.setFromAxisAngle(new G(0,1,0),Ho),Ye.copy(ne).multiply(i)}ft<1&&(ft+=Ve/Uo,ft=Math.min(ft,1),s.slerpQuaternions(ne,Ye,ft),e.quaternion.set(s.x,s.y,s.z,s.w)),t.position.copy(e.position),t.quaternion.copy(s),t.userData.centerDot&&t.userData.centerDot.position.copy(t.position)}}),Ut.update(),yt.render(vt,It)}As();
